{
    "manifests": {
        "devscast/symfony-hexa-bundle": {
            "manifest": {
                "bundles": {
                    "Devscast\\HexaBundle\\DevscastHexaBundle": [
                        "all"
                    ]
                },
                "copy-from-recipe": {
                    "_github/": ".github/",
                    "config/": "config/",
                    "docker/": "docker/",
                    "patches/": "patches/",
                    "public/": "public/",
                    "src/": "src/",
                    "_editorconfig": ".editorconfig",
                    "_gitattributes": ".gitattributes",
                    "_Makefile": "Makefile",
                    "_README.md": "README.md",
                    "compose.yaml": "compose.yaml",
                    "CONTRIBUTING.md": "CONTRIBUTING.md",
                    "ecs.php": "ecs.php",
                    "LICENSE.md": "LICENSE.md",
                    "nginx.conf": "nginx.conf",
                    "phpcs.xml.dist": "phpcs.xml.dist",
                    "phpstan.neon": "phpstan.neon"
                },
                "gitignore": [
                    "/.idea/",
                    "/.vscode/",
                    "/public/uploads/",
                    "/uploads"
                ],
                "post-install-output": [
                    "  * installed from devscast",
                    "  * Modify your DATABASE_URL config in <fg=green>.env</>",
                    "",
                    "  * Configure the <fg=green>driver</> (postgresql) and",
                    "    <fg=green>server_version</> (16) in <fg=green>config/packages/doctrine.yaml</>"
                ]
            },
            "files": {
                "CONTRIBUTING.md": {
                    "contents": [
                        ""
                    ],
                    "executable": false
                },
                "LICENSE.md": {
                    "contents": [
                        ""
                    ],
                    "executable": false
                },
                "_Makefile": {
                    "contents": [
                        ".DEFAULT_GOAL := help",
                        "",
                        "# -----------------------------------",
                        "# Variables",
                        "# -----------------------------------",
                        "is_docker := $(shell docker info > /dev/null 2>&1 && echo 1)",
                        "user := $(shell id -u)",
                        "group := $(shell id -g)",
                        "",
                        "ifeq ($(is_docker), 1)",
                        "\tdc := USER_ID=$(user) GROUP_ID=$(group) docker-compose",
                        "\tde := docker-compose exec",
                        "\tdr := $(dc) run --rm",
                        "\tsfc := $(dr) php bin/console",
                        "\tnode := $(dr) --user=\"$(user)\" node",
                        "\tphp := $(dr) --no-deps php",
                        "\tphptest := $(dr) php_test",
                        "\tcomposer := $(php) composer",
                        "else",
                        "\tphp := php",
                        "    node := node",
                        "    composer := composer",
                        "    sfc := $(php) bin/console",
                        "endif",
                        "",
                        "",
                        "# -----------------------------------",
                        "# Recipes",
                        "# -----------------------------------",
                        ".PHONY: help",
                        "help: ## show this help",
                        "\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}'",
                        "",
                        "",
                        ".PHONY: import",
                        "import:",
                        "\t$(php) bin/console app:import user",
                        "\t$(php) bin/console app:import fellowship",
                        "\t$(php) bin/console app:import transaction",
                        "\t$(php) bin/console app:import message",
                        "\t$(php) bin/console app:import profile",
                        "\t$(php) bin/console app:import entry",
                        "",
                        ".PHONY: lint",
                        "lint: vendor/autoload.php ## code style standard and static analysis",
                        "\t$(php) vendor/bin/phpcs -s",
                        "\t$(php) vendor/bin/ecs check",
                        "\t$(sfc) lint:yaml config --parse-tags",
                        "\t$(sfc) lint:twig templates",
                        "\t$(sfc) lint:container",
                        "\t$(php) vendor/bin/phpstan",
                        "",
                        ".PHONY: migrate",
                        "migrate: vendor/autoload.php ## create database and migrate to the latest version",
                        "\t$(sfc) doctrine:database:create --if-not-exists",
                        "\t$(sfc) doctrine:migration:migrate --no-interaction --allow-no-migration",
                        "",
                        ".PHONY: test",
                        "test: vendor/autoload.php public/assets/manifest.json ## unit and integration tests",
                        "\t$(phptest) bin/console cache:clear --env=test",
                        "\t$(phptest) bin/console doctrine:database:create --if-not-exists --env=test",
                        "\t$(phptest) bin/console doctrine:migration:migrate --no-interaction --allow-no-migration --env=test",
                        "\t$(phptest) bin/console doctrine:schema:validate --skip-sync --env=test",
                        "\t$(phptest) bin/phpunit --stop-on-failure",
                        "",
                        ".PHONY: build-docker",
                        "build-docker:",
                        "\t$(dc) pull --ignore-pull-failures",
                        "\t$(dc) build php",
                        "\t$(dc) build node",
                        "",
                        ".PHONY: dev",
                        "dev: vendor/autoload.php node_modules/time ## Start the development env",
                        "\t$(dc) up",
                        "",
                        ".PHONY: install",
                        "install: vendor/autoload.php public/assets/manifest.json ## install and setup",
                        "\tmake clear",
                        "\tmake migrate",
                        "",
                        ".PHONY: clear",
                        "clear: vendor/autoload.php ## clear symfony cache",
                        "\t$(sfc) cache:clear",
                        "\t$(sfc) cache:pool:clear cache.global_clearer",
                        "",
                        "# -----------------------------------",
                        "# Dependencies",
                        "# -----------------------------------",
                        "vendor/autoload.php: composer.json",
                        "\t$(composer) install",
                        "",
                        "composer.lock: composer.json",
                        "\t$(composer) update",
                        "",
                        "node_modules/time: yarn.lock",
                        "\t$(node) yarn install --force",
                        "\ttouch node_modules/time",
                        "",
                        "public/assets: node_modules/time",
                        "\t$(node) yarn run build",
                        "",
                        "public/assets/manifest.json: package.json",
                        "\t$(node) yarn --force",
                        "\t$(node) yarn run build"
                    ],
                    "executable": false
                },
                "_README.md": {
                    "contents": [
                        "# Devscast",
                        "",
                        ""
                    ],
                    "executable": false
                },
                "_editorconfig": {
                    "contents": [
                        "; top-most EditorConfig file",
                        "root = true",
                        "",
                        "; Unix-style newlines",
                        "[*]",
                        "end_of_line = LF",
                        "",
                        "[*.{yml,yaml}]",
                        "indent_style = space",
                        "indent_size = 4",
                        "",
                        "[*.json]",
                        "indent_style = space",
                        "indent_size = 4"
                    ],
                    "executable": false
                },
                "_gitattributes": {
                    "contents": [
                        "public/* linguist-vendored",
                        "assets/* linguist-vendored",
                        "",
                        "linguist-detectable=false",
                        "",
                        "*.css linguist-detectable=false",
                        "*.scss linguist-detectable=false",
                        "",
                        "# Enforce Unix newlines",
                        "*.css   text eol=lf",
                        "*.html  text eol=lf",
                        "*.js    text eol=lf",
                        "*.json  text eol=lf",
                        "*.md    text eol=lf",
                        "*.scss  text eol=lf",
                        "*.svg   text eol=lf",
                        "*.txt   text eol=lf",
                        "*.xml   text eol=lf",
                        "*.xml.* text eol=lf",
                        "*.yml   text eol=lf",
                        "*.php   text eol=lf",
                        "*.twig  text eol=lf",
                        "# Don't diff or textually merge source maps",
                        "*.map   binary",
                        ".mmdb filter=lfs diff=lfs merge=lfs -text"
                    ],
                    "executable": false
                },
                "_github/FUNDING.yml": {
                    "contents": [
                        "github: [devscast]"
                    ],
                    "executable": false
                },
                "_github/ISSUE_TEMPLATE/bug_report.md": {
                    "contents": [
                        "---",
                        "name: Bug report",
                        "about: Create a report to help us improve",
                        "title: ''",
                        "labels: ''",
                        "assignees: ''",
                        "",
                        "---",
                        "",
                        "**Describe the bug**",
                        "A clear and concise description of what the bug is.",
                        "",
                        "**To Reproduce**",
                        "Steps to reproduce the behavior:",
                        "1. Go to '...'",
                        "2. Click on '....'",
                        "3. Scroll down to '....'",
                        "4. See error",
                        "",
                        "**Expected behavior**",
                        "A clear and concise description of what you expected to happen.",
                        "",
                        "**Screenshots**",
                        "If applicable, add screenshots to help explain your problem.",
                        "",
                        "**Desktop (please complete the following information):**",
                        "- OS: [e.g. iOS]",
                        "- Browser [e.g. chrome, safari]",
                        "- Version [e.g. 22]",
                        "",
                        "**Smartphone (please complete the following information):**",
                        "- Device: [e.g. iPhone6]",
                        "- OS: [e.g. iOS8.1]",
                        "- Browser [e.g. stock browser, safari]",
                        "- Version [e.g. 22]",
                        "",
                        "**Additional context**",
                        "Add any other context about the problem here.",
                        ""
                    ],
                    "executable": false
                },
                "_github/ISSUE_TEMPLATE/feature_request.md": {
                    "contents": [
                        "---",
                        "name: Feature request",
                        "about: Suggest an idea for this project",
                        "title: ''",
                        "labels: ''",
                        "assignees: ''",
                        "",
                        "---",
                        "",
                        "**Is your feature request related to a problem? Please describe.**",
                        "A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]",
                        "",
                        "**Describe the solution you'd like**",
                        "A clear and concise description of what you want to happen.",
                        "",
                        "**Describe alternatives you've considered**",
                        "A clear and concise description of any alternative solutions or features you've considered.",
                        "",
                        "**Additional context**",
                        "Add any other context or screenshots about the feature request here.",
                        ""
                    ],
                    "executable": false
                },
                "_github/workflows/lint.yaml": {
                    "contents": [
                        "name: Lint",
                        "on: [ push, pull_request ]",
                        "jobs:",
                        "    lint:",
                        "        name: Coding style standard and static analysis check",
                        "        runs-on: ubuntu-latest",
                        "        steps:",
                        "            - uses: actions/checkout@master",
                        "            - name: lint",
                        "              run: make lint"
                    ],
                    "executable": false
                },
                "_github/workflows/test.yaml": {
                    "contents": [
                        "name: Test",
                        "on: [ push, pull_request ]",
                        "jobs:",
                        "    test:",
                        "        name: PHPUnit Symfony Unit and Functional Tests",
                        "        runs-on: ubuntu-latest",
                        "        steps:",
                        "            - uses: actions/checkout@master",
                        "            - name: test",
                        "              run: make test"
                    ],
                    "executable": false
                },
                "compose.yaml": {
                    "contents": [
                        "version: '3'",
                        "",
                        "services:",
                        "    database:",
                        "        image: mysql:8.0",
                        "        container_name: okademy_database",
                        "        restart: unless-stopped",
                        "        command: --default-authentication-plugin=mysql_native_password",
                        "        environment:",
                        "            MYSQL_ROOT_PASSWORD: root",
                        "            MYSQL_DATABASE: devscast",
                        "            MYSQL_ALLOW_EMPTY_ROOT_PASSWORD: 'no'",
                        "        volumes:",
                        "            - mysql-data:/var/lib/mysql:rw",
                        "            - ./var/mysql:/var/www/var",
                        "        labels:",
                        "            com.symfony.server.service-prefix: 'DATABASE'",
                        "",
                        "    web:",
                        "        image: nginx:alpine",
                        "        container_name: okademy_nginx",
                        "        restart: unless-stopped",
                        "        ports:",
                        "            - \"8000:80\"",
                        "        volumes:",
                        "            - .:/var/www:delegated",
                        "            - ./nginx.conf:/etc/nginx/conf.d/default.conf",
                        "        links:",
                        "            - php",
                        "",
                        "    php:",
                        "        user: '${USER_ID}:${GROUP_ID}'",
                        "        container_name: okademy_php",
                        "        restart: unless-stopped",
                        "        build:",
                        "            context: ./docker/php",
                        "        volumes:",
                        "            - .:/var/www:delegated",
                        "        depends_on:",
                        "            - database",
                        "",
                        "    ## Development Tools",
                        "    maildev:",
                        "        image: mailhog/mailhog",
                        "        container_name: okademy_maildev",
                        "        ports:",
                        "            - \"1080:8025\"",
                        "        labels:",
                        "            com.symfony.server.service-prefix: 'MAILER'",
                        "",
                        "    adminer:",
                        "        image: adminer:4.8.1",
                        "        container_name: okademy_adminer",
                        "        restart: unless-stopped",
                        "        depends_on:",
                        "            - database",
                        "        environment:",
                        "            APP_ENV: dev",
                        "            ADMINER_DESIGN: pepa-linha",
                        "            ADMINER_DEFAULT_SERVER: database",
                        "        ports:",
                        "            - \"8082:8080\"",
                        "",
                        "    node:",
                        "        container_name: okademy_node",
                        "        restart: unless-stopped",
                        "        user: '${USER_ID}:${GROUP_ID}'",
                        "        build:",
                        "            context: ./docker/node",
                        "        command: yarn run watch",
                        "        working_dir: /home/node/app",
                        "        volumes:",
                        "            - ./:/home/node/app",
                        "        ports:",
                        "            - \"3000:3000\"",
                        "",
                        "volumes:",
                        "    mysql-data:",
                        "        driver:",
                        "            local"
                    ],
                    "executable": false
                },
                "config/domains/.gitignore": {
                    "contents": [
                        ""
                    ],
                    "executable": false
                },
                "config/packages/dev/maker.yaml": {
                    "contents": [
                        "maker:",
                        "    root_namespace: Infrastructure"
                    ],
                    "executable": false
                },
                "config/vich_uploader.yaml": {
                    "contents": [
                        "vich_uploader:",
                        "    db_driver: orm",
                        "    metadata:",
                        "        auto_detection: false",
                        "        cache: file",
                        "        directories:",
                        "            - {",
                        "                path: '%kernel.project_dir%/src/Infrastructure/Shared/Symfony/Uploader/Mapping',",
                        "                namespace_prefix: 'Domain\\Shared'",
                        "            }",
                        "",
                        "    mappings:",
                        "    # authentication_user_avatar:",
                        "    #     uri_prefix: '/uploads/authentication/user/avatar'",
                        "    #     upload_destination: '%kernel.project_dir%/public/uploads/authentication/user/avatar'",
                        "    #     namer: Vich\\UploaderBundle\\Naming\\UniqidNamer"
                    ],
                    "executable": false
                },
                "docker/node/Dockerfile": {
                    "contents": [
                        "FROM node:18-alpine",
                        "",
                        "WORKDIR /home/node/app",
                        "RUN chown -R node:node /home/node/app",
                        "",
                        "USER node",
                        "EXPOSE 3000"
                    ],
                    "executable": false
                },
                "docker/php/Dockerfile": {
                    "contents": [
                        "FROM php:8.3-fpm-alpine",
                        "",
                        "# Install dependencies",
                        "RUN apk --no-cache add curl git wget bash dpkg",
                        "",
                        "# Add PHP extensions",
                        "ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/",
                        "RUN chmod +x /usr/local/bin/install-php-extensions && \\",
                        "    install-php-extensions iconv zip intl opcache zip soap gd imagick apcu redis pdo pdo_mysql",
                        "",
                        "# Composer",
                        "RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer",
                        "",
                        "# Pour la r\u00e9cup\u00e9ration des dur\u00e9es des vid\u00e9os",
                        "RUN apk --no-cache add ffmpeg",
                        "",
                        "WORKDIR /var/www",
                        ""
                    ],
                    "executable": false
                },
                "ecs.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "use Symfony\\Component\\DependencyInjection\\Loader\\Configurator\\ContainerConfigurator;",
                        "",
                        "return static function (\\Symplify\\EasyCodingStandard\\Config\\ECSConfig $containerConfigurator): void {",
                        "    $parameters = $containerConfigurator->parameters();",
                        "    $parameters->set(Symplify\\EasyCodingStandard\\ValueObject\\Option::PATHS, [",
                        "        __DIR__ . '/src',",
                        "        __DIR__ . '/tests',",
                        "    ]);",
                        "",
                        "    $containerConfigurator->import(Symplify\\EasyCodingStandard\\ValueObject\\Set\\SetList::PSR_12);",
                        "    $containerConfigurator->import(Symplify\\EasyCodingStandard\\ValueObject\\Set\\SetList::COMMON);",
                        "    $containerConfigurator->import(Symplify\\EasyCodingStandard\\ValueObject\\Set\\SetList::CLEAN_CODE);",
                        "    $containerConfigurator->import(Symplify\\EasyCodingStandard\\ValueObject\\Set\\SetList::SYMFONY);",
                        "",
                        "    $services = $containerConfigurator->services();",
                        "    $services->remove(PhpCsFixer\\Fixer\\Operator\\ConcatSpaceFixer::class);",
                        "};",
                        ""
                    ],
                    "executable": false
                },
                "nginx.conf": {
                    "contents": [
                        "server {",
                        "    listen 80;",
                        "    server_name localhost;",
                        "    root /var/www/public;",
                        "",
                        "    add_header X-Frame-Options \"SAMEORIGIN\";",
                        "    add_header X-XSS-Protection \"1; mode=block\";",
                        "    add_header X-Content-Type-Options \"nosniff\";",
                        "",
                        "    index index.html index.htm index.php;",
                        "",
                        "    charset utf-8;",
                        "",
                        "    location / {",
                        "        root /var/www/;",
                        "        try_files /public/$uri /public/$uri /assets/$uri /index.php?$query_string;",
                        "    }",
                        "",
                        "    location = /favicon.ico { access_log off; log_not_found off; }",
                        "    location = /robots.txt  { access_log off; log_not_found off; }",
                        "",
                        "    error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.html;",
                        "",
                        "    location ~ \\.php$ {",
                        "        fastcgi_pass php:9000;",
                        "        fastcgi_index index.php;",
                        "        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;",
                        "        include fastcgi_params;",
                        "        fastcgi_buffers 16 16k;",
                        "        fastcgi_buffer_size 32k;",
                        "    }",
                        "",
                        "    location ~ /\\.(?!well-known).* {",
                        "        deny all;",
                        "    }",
                        "}"
                    ],
                    "executable": false
                },
                "patches/ux-twig-component.patch": {
                    "contents": [
                        "--- a/vendor/symfony/ux-twig-component/src/Twig/TwigPreLexer.php\t2024-02-29 18:20:59.000000000 +0200",
                        "+++ b/vendor/symfony/ux-twig-component/src/Twig/TwigPreLexer.php\t2024-05-09 13:37:06.643585125 +0200",
                        "@@ -70,6 +70,17 @@",
                        "                 }",
                        "             }",
                        "",
                        "+            if ($this->consume('{{ \"')) {",
                        "+                $output .= '{{ \"';",
                        "+                $output .= $this->consumeUntil('\" }}');",
                        "+                $this->consume('\" }}');",
                        "+                $output .= '\" }}';",
                        "+",
                        "+                if ($this->position === $this->length) {",
                        "+                    break;",
                        "+                }",
                        "+            }",
                        "+",
                        "             if ($this->consume('{% embed')) {",
                        "                 $inTwigEmbed = true;",
                        "                 $output .= '{% embed';"
                    ],
                    "executable": false
                },
                "patches/vich-uploader-bundle.patch": {
                    "contents": [
                        "--- a/vendor/vich/uploader-bundle/src/Storage/FileSystemStorage.php\t2023-03-18 07:46:44.000000000 +0200",
                        "+++ b/vendor/vich/uploader-bundle/src/Storage/FileSystemStorage.php\t2023-03-20 00:04:22.367989824 +0200",
                        "@@ -22,6 +22,11 @@",
                        "             return $file->move($uploadDir, $name);",
                        "         } else {",
                        "             $targetPathname = $uploadDir.\\DIRECTORY_SEPARATOR.$name;",
                        "+",
                        "+            if (!is_dir($uploadDir)) {",
                        "+                mkdir($uploadDir, recursive: true);",
                        "+            }",
                        "+",
                        "             if (!\\copy($file->getPathname(), $targetPathname)) {",
                        "                 throw new \\Exception('Could not copy file');",
                        "             }"
                    ],
                    "executable": false
                },
                "phpcs.xml.dist": {
                    "contents": [
                        "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                        "",
                        "<ruleset xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"",
                        "         xsi:noNamespaceSchemaLocation=\"vendor/squizlabs/php_codesniffer/phpcs.xsd\">",
                        "",
                        "    <arg name=\"basepath\" value=\".\"/>",
                        "    <arg name=\"cache\" value=\".phpcs-cache\"/>",
                        "    <arg name=\"colors\"/>",
                        "    <arg name=\"extensions\" value=\"php\"/>",
                        "",
                        "    <rule ref=\"PSR12\">",
                        "        <exclude name=\"Generic.Files.LineLength.TooLong\"/>",
                        "        <exclude name=\"PSR12.Files.FileHeader.SpacingAfterBlock\"/>",
                        "        <exclude name=\"PSR12.Classes.AnonClassDeclaration.SpaceAfterKeyword\"/>",
                        "    </rule>",
                        "    <rule ref=\"PSR12\"/>",
                        "",
                        "    <file>config/</file>",
                        "    <file>public/</file>",
                        "    <file>src/</file>",
                        "    <file>tests/</file>",
                        "</ruleset>",
                        ""
                    ],
                    "executable": false
                },
                "phpstan.neon": {
                    "contents": [
                        "includes:",
                        "    - vendor/phpstan/phpstan-phpunit/extension.neon",
                        "    - vendor/phpstan/phpstan-symfony/extension.neon",
                        "    - vendor/phpstan/phpstan-symfony/rules.neon",
                        "    - vendor/phpstan/phpstan-doctrine/extension.neon",
                        "    - vendor/phpstan/phpstan-doctrine/rules.neon",
                        "",
                        "parameters:",
                        "    level: 9",
                        "    paths:",
                        "        - src",
                        "        # - tests",
                        "",
                        "    doctrine:",
                        "        objectManagerLoader: tests/object-manager.php",
                        "        allowNullablePropertyForRequiredField: true",
                        "",
                        "    ignoreErrors:",
                        "        - identifier: missingType.generics",
                        "        - identifier: missingType.iterableValue",
                        ""
                    ],
                    "executable": false
                },
                "public/.htaccess": {
                    "contents": [
                        "# Use the front controller as index file. It serves as a fallback solution when",
                        "# every other rewrite/redirect fails (e.g. in an aliased environment without",
                        "# mod_rewrite). Additionally, this reduces the matching process for the",
                        "# start page (path \"/\") because otherwise Apache will apply the rewriting rules",
                        "# to each configured DirectoryIndex file (e.g. index.php, index.html, index.pl).",
                        "DirectoryIndex index.php",
                        "",
                        "# By default, Apache does not evaluate symbolic links if you did not enable this",
                        "# feature in your server configuration. Uncomment the following line if you",
                        "# install assets as symlinks or if you experience problems related to symlinks",
                        "# when compiling LESS/Sass/CoffeScript assets.",
                        "# Options +FollowSymlinks",
                        "",
                        "# Disabling MultiViews prevents unwanted negotiation, e.g. \"/index\" should not resolve",
                        "# to the front controller \"/index.php\" but be rewritten to \"/index.php/index\".",
                        "<IfModule mod_negotiation.c>",
                        "    Options -MultiViews",
                        "</IfModule>",
                        "",
                        "<IfModule mod_rewrite.c>",
                        "    RewriteEngine On",
                        "",
                        "    # Determine the RewriteBase automatically and set it as environment variable.",
                        "    # If you are using Apache aliases to do mass virtual hosting or installed the",
                        "    # project in a subdirectory, the base path will be prepended to allow proper",
                        "    # resolution of the index.php file and to redirect to the correct URI. It will",
                        "    # work in environments without path prefix as well, providing a safe, one-size",
                        "    # fits all solution. But as you do not need it in this case, you can comment",
                        "    # the following 2 lines to eliminate the overhead.",
                        "    RewriteCond %{REQUEST_URI}::$0 ^(/.+)/(.*)::\\2$",
                        "    RewriteRule .* - [E=BASE:%1]",
                        "",
                        "    # Sets the HTTP_AUTHORIZATION header removed by Apache",
                        "    RewriteCond %{HTTP:Authorization} .+",
                        "    RewriteRule ^ - [E=HTTP_AUTHORIZATION:%0]",
                        "",
                        "    # Redirect to URI without front controller to prevent duplicate content",
                        "    # (with and without `/index.php`). Only do this redirect on the initial",
                        "    # rewrite by Apache and not on subsequent cycles. Otherwise we would get an",
                        "    # endless redirect loop (request -> rewrite to front controller ->",
                        "    # redirect -> request -> ...).",
                        "    # So in case you get a \"too many redirects\" error or you always get redirected",
                        "    # to the start page because your Apache does not expose the REDIRECT_STATUS",
                        "    # environment variable, you have 2 choices:",
                        "    # - disable this feature by commenting the following 2 lines or",
                        "    # - use Apache >= 2.3.9 and replace all L flags by END flags and remove the",
                        "    #   following RewriteCond (best solution)",
                        "    RewriteCond %{ENV:REDIRECT_STATUS} =\"\"",
                        "    RewriteRule ^index\\.php(?:/(.*)|$) %{ENV:BASE}/$1 [R=301,L]",
                        "",
                        "    # If the requested filename exists, simply serve it.",
                        "    # We only want to let Apache serve files and not directories.",
                        "    # Rewrite all other queries to the front controller.",
                        "    RewriteCond %{REQUEST_FILENAME} !-f",
                        "    RewriteRule ^ %{ENV:BASE}/index.php [L]",
                        "</IfModule>",
                        "",
                        "<IfModule !mod_rewrite.c>",
                        "    <IfModule mod_alias.c>",
                        "        # When mod_rewrite is not available, we instruct a temporary redirect of",
                        "        # the start page to the front controller explicitly so that the website",
                        "        # and the generated links can still be used.",
                        "        RedirectMatch 307 ^/$ /index.php/",
                        "        # RedirectTemp cannot be used instead",
                        "    </IfModule>",
                        "</IfModule>"
                    ],
                    "executable": false
                },
                "public/manifest.json": {
                    "contents": [
                        "{",
                        "    \"dir\": \"ltr\",",
                        "    \"lang\": \"fr-Fr\",",
                        "    \"short_name\": \"Devscast\",",
                        "    \"name\": \"Devscast Community\",",
                        "    \"icons\": [",
                        "        {",
                        "            \"src\": \"/images/icons/logo/maskable_icon.png\",",
                        "            \"type\": \"image/png\",",
                        "            \"purpose\": \"any maskable\"",
                        "        },",
                        "        {",
                        "            \"src\": \"/images/icons/logo/maskable_icon_x192.png\",",
                        "            \"type\": \"image/png\",",
                        "            \"sizes\": \"192x192\",",
                        "            \"purpose\": \"any maskable\"",
                        "        },",
                        "        {",
                        "            \"src\": \"/images/icons/logo/maskable_icon_x512.png\",",
                        "            \"type\": \"image/png\",",
                        "            \"sizes\": \"512x512\",",
                        "            \"purpose\": \"any maskable\"",
                        "        }",
                        "    ],",
                        "    \"start_url\": \"/?source=pwa\",",
                        "    \"background_color\": \"#222222\",",
                        "    \"display\": \"standalone\",",
                        "    \"orientation\": \"portrait\",",
                        "    \"scope\": \"/\",",
                        "    \"theme_color\": \"#05FFBB\",",
                        "    \"shortcuts\": [],",
                        "    \"description\": \"\"",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "public/robots.txt": {
                    "contents": [
                        "User-agent: *",
                        "Disallow: /admin/",
                        "Disallow: /offline"
                    ],
                    "executable": false
                },
                "src/Application/Shared/.gitignore": {
                    "contents": [
                        ""
                    ],
                    "executable": false
                },
                "src/Domain/Shared/.gitignore": {
                    "contents": [
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/.gitignore": {
                    "contents": [
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "5991f01e771a3fac98c2f7f6ed7d3b071fb5454d"
        }
    }
}
