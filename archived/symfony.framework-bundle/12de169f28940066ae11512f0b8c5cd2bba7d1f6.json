{
    "manifests": {
        "symfony/framework-bundle": {
            "manifest": {
                "bundles": {
                    "Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle": [
                        "all"
                    ]
                },
                "copy-from-recipe": {
                    "config/": "%CONFIG_DIR%/",
                    "public/": "%PUBLIC_DIR%/",
                    "src/": "%SRC_DIR%/"
                },
                "composer-scripts": {
                    "cache:clear": "symfony-cmd",
                    "assets:install %PUBLIC_DIR%": "symfony-cmd"
                },
                "env": {
                    "APP_ENV": "dev",
                    "APP_SECRET": "%generate(secret)%"
                },
                "gitignore": [
                    "/.env.local",
                    "/.env.local.php",
                    "/.env.*.local",
                    "/%CONFIG_DIR%/secrets/prod/prod.decrypt.private.php",
                    "/%PUBLIC_DIR%/bundles/",
                    "/%VAR_DIR%/",
                    "/vendor/"
                ],
                "post-install-output": [
                    "  * installed from devscast"
                ]
            },
            "files": {
                "config/packages/cache.yaml": {
                    "contents": [
                        "framework:",
                        "    cache:",
                        "        # Unique name of your app: used to compute stable namespaces for cache keys.",
                        "        #prefix_seed: your_vendor_name/app_name",
                        "",
                        "        # The \"app\" cache stores to the filesystem by default.",
                        "        # The data in this cache should persist between deploys.",
                        "        # Other options include:",
                        "",
                        "        # Redis",
                        "        #app: cache.adapter.redis",
                        "        #default_redis_provider: redis://localhost",
                        "",
                        "        # APCu (not recommended with heavy random-write workloads as memory fragmentation can cause perf issues)",
                        "        #app: cache.adapter.apcu",
                        "",
                        "        # Namespaced pools use the above \"app\" backend by default",
                        "        #pools:",
                        "            #my.dedicated.cache: null"
                    ],
                    "executable": false
                },
                "config/packages/framework.yaml": {
                    "contents": [
                        "# see https://symfony.com/doc/current/reference/configuration/framework.html",
                        "framework:",
                        "    secret: '%env(APP_SECRET)%'",
                        "    csrf_protection: true",
                        "    http_method_override: true",
                        "    handle_all_throwables: true",
                        "",
                        "    # Enables session support. Note that the session will ONLY be started if you read or write from it.",
                        "    # Remove or comment this section to explicitly disable session support.",
                        "    session:",
                        "        handler_id: null",
                        "        cookie_secure: auto",
                        "        cookie_samesite: lax",
                        "        storage_factory_id: session.storage.factory.native",
                        "",
                        "    #esi: true",
                        "    #fragments: true",
                        "    php_errors:",
                        "        log: true",
                        "",
                        "when@test:",
                        "    framework:",
                        "        test: true",
                        "        session:",
                        "            storage_factory_id: session.storage.factory.mock_file"
                    ],
                    "executable": false
                },
                "config/preload.php": {
                    "contents": [
                        "<?php",
                        "",
                        "if (file_exists(dirname(__DIR__).'/var/cache/prod/Infrastructure_Shared_Symfony_KernelProdContainer.preload.php')) {",
                        "    require dirname(__DIR__).'/var/cache/prod/Infrastructure_Shared_Symfony_KernelProdContainer.preload.php';",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/framework.yaml": {
                    "contents": [
                        "when@dev:",
                        "    _errors:",
                        "        resource: '@FrameworkBundle/Resources/config/routing/errors.xml'",
                        "        prefix: /_error"
                    ],
                    "executable": false
                },
                "config/services.yaml": {
                    "contents": [
                        "# This file is the entry point to configure your own services.",
                        "# Files in the packages/ subdirectory configure your dependencies.",
                        "",
                        "# imports:",
                        "#     - { resource: './domains/*.yaml' }",
                        "",
                        "# Put parameters here that don't need to change on each machine where the app is deployed",
                        "# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration",
                        "parameters:",
                        "    devscast.administration.default_sidebar: Infrastructure\\Shared\\Symfony\\Twig\\UI\\MainSidebar",
                        "",
                        "services:",
                        "    # default configuration for services in *this* file",
                        "    _defaults:",
                        "        autowire: true      # Automatically injects dependencies in your services.",
                        "        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.",
                        "        # bind:",
                        "        #     $projectDir: '%kernel.project_dir%'",
                        "",
                        "    # makes classes in src/ available to be used as services",
                        "    # this creates a service per class whose id is the fully-qualified class name",
                        "    Fixtures\\:",
                        "        resource: '../fixtures/*'",
                        "",
                        "    Application\\:",
                        "        resource: '../src/Application'",
                        "",
                        "    Domain\\:",
                        "        resource: '../src/Domain'",
                        "",
                        "    Infrastructure\\:",
                        "        resource: '../src/Infrastructure'",
                        "        exclude:",
                        "            - '../src/Infrastructure/Shared/Symfony/Kernel.php'",
                        "",
                        "    Symfony\\Component\\DependencyInjection\\ContainerInterface:",
                        "        alias: 'service_container'",
                        "",
                        "    # Infrastructure\\Shared\\Symfony\\Twig\\UI\\MainSidebar:",
                        "    #     public: true",
                        ""
                    ],
                    "executable": false
                },
                "public/index.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "use Infrastructure\\Shared\\Symfony\\Kernel;",
                        "",
                        "require_once dirname(__DIR__) . '/vendor/autoload_runtime.php';",
                        "",
                        "return function (array $context) {",
                        "    return new Kernel(",
                        "        environment: $context['APP_ENV'],",
                        "        debug: (bool)$context['APP_DEBUG']",
                        "    );",
                        "};",
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/Symfony/Controller/.gitignore": {
                    "contents": [
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/Symfony/Kernel.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace Infrastructure\\Shared\\Symfony;",
                        "",
                        "use Symfony\\Bundle\\FrameworkBundle\\Kernel\\MicroKernelTrait;",
                        "use Symfony\\Component\\HttpKernel\\Kernel as BaseKernel;",
                        "",
                        "/**",
                        " * Class Kernel.",
                        " *",
                        " * @author bernard-ng <bernard@devscast.tech>",
                        " */",
                        "final class Kernel extends BaseKernel",
                        "{",
                        "    use MicroKernelTrait;",
                        "}",
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "12de169f28940066ae11512f0b8c5cd2bba7d1f6"
        }
    }
}
