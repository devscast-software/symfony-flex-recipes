{
    "manifests": {
        "symfony/twig-bundle": {
            "manifest": {
                "bundles": {
                    "Symfony\\Bundle\\TwigBundle\\TwigBundle": [
                        "all"
                    ]
                },
                "copy-from-recipe": {
                    "config/": "%CONFIG_DIR%/",
                    "templates/": "templates/",
                    "src/": "src/"
                },
                "conflict": {
                    "symfony/framework-bundle": "<5.3"
                },
                "post-install-output": [
                    "  * installed from devscast"
                ]
            },
            "files": {
                "config/packages/twig.yaml": {
                    "contents": [
                        "twig:",
                        "    paths:",
                        "        '%kernel.project_dir%/templates/app': 'app'",
                        "        '%kernel.project_dir%/templates/admin': 'admin'",
                        "    form_themes:",
                        "        # - '@app/shared/layout/form_theme.html.twig'",
                        "    default_path: '%kernel.project_dir%/templates'",
                        "    date:",
                        "        format: 'd M Y H:i'",
                        "        interval_format: '%d days'",
                        "        timezone: null",
                        "    number_format:",
                        "        decimals: 2",
                        "        decimal_point: ','",
                        "        thousands_separator: '.'",
                        "",
                        "when@test:",
                        "    twig:",
                        "        strict_variables: true",
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/Symfony/Twig/Badge.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace Infrastructure\\Shared\\Symfony\\Twig;",
                        "",
                        "/**",
                        " * Class Badge.",
                        " *",
                        " * @author bernard-ng <bernard@devscast.tech>",
                        " */",
                        "class Badge",
                        "{",
                        "    public const STYLES = [",
                        "        'dim' => 'dim',",
                        "        'dot' => 'dot',",
                        "    ];",
                        "",
                        "    public const STATES = [",
                        "        'primary' => 'primary',",
                        "        'secondary' => 'secondary',",
                        "        'success' => 'success',",
                        "        'danger' => 'danger',",
                        "        'warning' => 'warning',",
                        "        'info' => 'info',",
                        "        'dark' => 'dark',",
                        "        'grey' => 'grey',",
                        "        'light' => 'light',",
                        "    ];",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/Symfony/Twig/BadgeExtension.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace Infrastructure\\Shared\\Symfony\\Twig;",
                        "",
                        "use Symfony\\Contracts\\Translation\\TranslatorInterface;",
                        "use Twig\\Extension\\AbstractExtension;",
                        "use Twig\\TwigFilter;",
                        "",
                        "/**",
                        " * Class BadgeExtension.",
                        " *",
                        " * @author bernard-ng <bernard@devscast.tech>",
                        " */",
                        "class BadgeExtension extends AbstractExtension",
                        "{",
                        "    private TranslatorInterface $translator;",
                        "",
                        "    private array $badges;",
                        "",
                        "    public function __construct(TranslatorInterface $translator)",
                        "    {",
                        "        $this->translator = $translator;",
                        "        $this->badges = [",
                        "            'ROLE_ADMIN' => [",
                        "                'state' => 'danger',",
                        "            ],",
                        "            'ROLE_SUPER_ADMIN' => [",
                        "                'state' => 'danger',",
                        "            ],",
                        "            'ROLE_BUSINESS_MANAGER' => [",
                        "                'state' => 'danger',",
                        "            ],",
                        "            'ROLE_CONTENT_MANAGER' => [",
                        "                'state' => 'danger',",
                        "            ],",
                        "            'ROLE_USER' => [",
                        "                'state' => 'success',",
                        "            ],",
                        "            'draft' => [",
                        "                'state' => 'warning',",
                        "                'style' => 'dim',",
                        "            ],",
                        "            'published' => [",
                        "                'state' => 'success',",
                        "                'style' => 'dim',",
                        "            ],",
                        "            'archived' => [",
                        "                'state' => 'danger',",
                        "                'style' => 'dim',",
                        "            ],",
                        "            'rejected' => [",
                        "                'state' => 'danger',",
                        "            ],",
                        "        ];",
                        "    }",
                        "",
                        "    public function getFilters(): array",
                        "    {",
                        "        return [",
                        "            new TwigFilter('badge', [$this, 'badge'], [",
                        "                'is_safe' => ['html'],",
                        "            ]),",
                        "            new TwigFilter('boolean', [$this, 'boolean'], [",
                        "                'is_safe' => ['html'],",
                        "            ]),",
                        "        ];",
                        "    }",
                        "",
                        "    public function boolean(int $value): string",
                        "    {",
                        "        if (1 === $value) {",
                        "            return <<< HTML",
                        "                <em class=\"icon ni ni-check-circle-fill text-success\" aria-label=\"icon check\" role=\"img\"></em>",
                        "            HTML;",
                        "        }",
                        "",
                        "        return <<< HTML",
                        "                <em class=\"icon ni ni-cross-circle-fill text-danger\" aria-label=\"icon cross\" role=\"img\"></em>",
                        "            HTML;",
                        "    }",
                        "",
                        "    public function badge(string $label): string",
                        "    {",
                        "        $style = $this->badges[$label]['style'] ?? 'dim';",
                        "        $state = $this->badges[$label]['state'] ?? 'primary';",
                        "        $label = $this->translator->trans($label);",
                        "",
                        "        return <<< HTML",
                        "            <span aria-label=\"${label}\" class=\"badge badge-${style} bg-${state}\">",
                        "                ${label}",
                        "            </span>",
                        "        HTML;",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/Symfony/Twig/Icon.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace Infrastructure\\Shared\\Symfony\\Twig;",
                        "",
                        "use OutOfBoundsException;",
                        "",
                        "/**",
                        " * Class Icon.",
                        " *",
                        " * @author bernard-ng <bernard@devscast.tech>",
                        " */",
                        "class Icon",
                        "{",
                        "    /**",
                        "     * Using a key => index to use O(1) search algorithm.",
                        "     *",
                        "     * @see https://stackoverflow.com/questions/2473989/list-of-big-o-for-php-functions",
                        "     */",
                        "    public const ICONS = [",
                        "        'centos' => 'centos',",
                        "        'covid' => 'covid',",
                        "        'fedora' => 'fedora',",
                        "        'hot-fill' => 'hot-fill',",
                        "        'hot' => 'hot',",
                        "        'linux-server' => 'linux-server',",
                        "        'linux' => 'linux',",
                        "        'note-add-fill' => 'note-add-fill',",
                        "        'repeat-fill' => 'repeat-fill',",
                        "        'tranx-fill' => 'tranx-fill',",
                        "        'ubuntu' => 'ubuntu',",
                        "        'virus' => 'virus',",
                        "        'b-chrome' => 'b-chrome',",
                        "        'b-edge' => 'b-edge',",
                        "        'b-firefox' => 'b-firefox',",
                        "        'b-ie' => 'b-ie',",
                        "        'b-opera' => 'b-opera',",
                        "        'b-safari' => 'b-safari',",
                        "        'b-si' => 'b-si',",
                        "        'b-uc' => 'b-uc',",
                        "        'brick-fill' => 'brick-fill',",
                        "        'brick' => 'brick',",
                        "        'col-3s' => 'col-3s',",
                        "        'col-4s' => 'col-4s',",
                        "        'col-2s' => 'col-2s',",
                        "        'comments' => 'comments',",
                        "        'dot-sq' => 'dot-sq',",
                        "        'dot' => 'dot',",
                        "        'footer' => 'footer',",
                        "        'header' => 'header',",
                        "        'heading' => 'heading',",
                        "        'layout-alt-fill' => 'layout-alt-fill',",
                        "        'layout-alt' => 'layout-alt',",
                        "        'layout-fill1' => 'layout-fill1',",
                        "        'layout1' => 'layout1',",
                        "        'list-index-fill' => 'list-index-fill',",
                        "        'list-index' => 'list-index',",
                        "        'list-thumb-alt-fill' => 'list-thumb-alt-fill',",
                        "        'list-thumb-alt' => 'list-thumb-alt',",
                        "        'list-thumb-fill' => 'list-thumb-fill',",
                        "        'list-thumb' => 'list-thumb',",
                        "        'masonry-fill' => 'masonry-fill',",
                        "        'masonry' => 'masonry',",
                        "        'menu-circled' => 'menu-circled',",
                        "        'menu-squared' => 'menu-squared',",
                        "        'notice' => 'notice',",
                        "        'pen2' => 'pen2',",
                        "        'property-blank' => 'property-blank',",
                        "        'property-add' => 'property-add',",
                        "        'property-alt' => 'property-alt',",
                        "        'property-remove' => 'property-remove',",
                        "        'property' => 'property',",
                        "        'puzzle-fill' => 'puzzle-fill',",
                        "        'puzzle' => 'puzzle',",
                        "        'quote-left' => 'quote-left',",
                        "        'quote-right' => 'quote-right',",
                        "        'row-mix' => 'row-mix',",
                        "        'row-view1' => 'row-view1',",
                        "        'sidebar-r' => 'sidebar-r',",
                        "        'text2' => 'text2',",
                        "        'tile-thumb-fill' => 'tile-thumb-fill',",
                        "        'tile-thumb' => 'tile-thumb',",
                        "        'view-col-fill' => 'view-col-fill',",
                        "        'view-col-sq' => 'view-col-sq',",
                        "        'view-col' => 'view-col',",
                        "        'view-col2' => 'view-col2',",
                        "        'view-col3' => 'view-col3',",
                        "        'view-cols-fill' => 'view-cols-fill',",
                        "        'view-cols-sq' => 'view-cols-sq',",
                        "        'view-cols' => 'view-cols',",
                        "        'view-grid-fill' => 'view-grid-fill',",
                        "        'view-grid-sq' => 'view-grid-sq',",
                        "        'view-grid-wd' => 'view-grid-wd',",
                        "        'view-grid' => 'view-grid',",
                        "        'view-grid2-wd' => 'view-grid2-wd',",
                        "        'view-grid3-wd' => 'view-grid3-wd',",
                        "        'view-group-fill' => 'view-group-fill',",
                        "        'view-group-wd' => 'view-group-wd',",
                        "        'view-list-fill' => 'view-list-fill',",
                        "        'view-list-sq' => 'view-list-sq',",
                        "        'view-list-wd' => 'view-list-wd',",
                        "        'view-list' => 'view-list',",
                        "        'view-panel-fill' => 'view-panel-fill',",
                        "        'view-panel-sq' => 'view-panel-sq',",
                        "        'view-panel' => 'view-panel',",
                        "        'view-row-fill' => 'view-row-fill',",
                        "        'view-row-sq' => 'view-row-sq',",
                        "        'view-row-wd' => 'view-row-wd',",
                        "        'view-row' => 'view-row',",
                        "        'view-x1' => 'view-x1',",
                        "        'view-x2' => 'view-x2',",
                        "        'view-x3' => 'view-x3',",
                        "        'view-x4' => 'view-x4',",
                        "        'view-x5' => 'view-x5',",
                        "        'view-x6' => 'view-x6',",
                        "        'view-x7' => 'view-x7',",
                        "        'dashlite' => 'dashlite',",
                        "        'dashlite-circle' => 'dashlite-circle',",
                        "        'dashlite-alt' => 'dashlite-alt',",
                        "        'master-card' => 'master-card',",
                        "        'paypal' => 'paypal',",
                        "        'visa-alt' => 'visa-alt',",
                        "        'coin-eur' => 'coin-eur',",
                        "        'coin-gbp' => 'coin-gbp',",
                        "        'sign-ada-alt' => 'sign-ada-alt',",
                        "        'sign-bch-alt' => 'sign-bch-alt',",
                        "        'sign-bgp-alt' => 'sign-bgp-alt',",
                        "        'sign-bnb-alt' => 'sign-bnb-alt',",
                        "        'sign-brl-alt' => 'sign-brl-alt',",
                        "        'sign-btc-alt' => 'sign-btc-alt',",
                        "        'sign-cc-alt' => 'sign-cc-alt',",
                        "        'sign-cc-alt2' => 'sign-cc-alt2',",
                        "        'sign-chf-alt' => 'sign-chf-alt',",
                        "        'sign-cny-alt' => 'sign-cny-alt',",
                        "        'sign-czk-alt' => 'sign-czk-alt',",
                        "        'sign-dash-alt' => 'sign-dash-alt',",
                        "        'sign-dkk-alt' => 'sign-dkk-alt',",
                        "        'sign-eos-alt' => 'sign-eos-alt',",
                        "        'sign-eth-alt' => 'sign-eth-alt',",
                        "        'sign-eur-alt2' => 'sign-eur-alt2',",
                        "        'sign-euro-alt' => 'sign-euro-alt',",
                        "        'sign-gbp-alt2' => 'sign-gbp-alt2',",
                        "        'sign-hkd-alt' => 'sign-hkd-alt',",
                        "        'sign-idr-alt' => 'sign-idr-alt',",
                        "        'sign-inr-alt' => 'sign-inr-alt',",
                        "        'sign-jpy-alt' => 'sign-jpy-alt',",
                        "        'sign-kr-alt' => 'sign-kr-alt',",
                        "        'sign-ltc-alt' => 'sign-ltc-alt',",
                        "        'sign-ltc' => 'sign-ltc',",
                        "        'sign-mxn-alt' => 'sign-mxn-alt',",
                        "        'sign-mxr-alt' => 'sign-mxr-alt',",
                        "        'sign-myr-alt' => 'sign-myr-alt',",
                        "        'sign-paypal-alt' => 'sign-paypal-alt',",
                        "        'sign-paypal-full' => 'sign-paypal-full',",
                        "        'sign-php-alt' => 'sign-php-alt',",
                        "        'sign-pln-alt' => 'sign-pln-alt',",
                        "        'sign-rub-alt' => 'sign-rub-alt',",
                        "        'sign-sek-alt' => 'sign-sek-alt',",
                        "        'sign-sgd-alt' => 'sign-sgd-alt',",
                        "        'sign-kobo-alt' => 'sign-kobo-alt',",
                        "        'sign-steem-alt' => 'sign-steem-alt',",
                        "        'sign-steller-alt' => 'sign-steller-alt',",
                        "        'sign-stripe-fulll' => 'sign-stripe-fulll',",
                        "        'sign-thb-alt' => 'sign-thb-alt',",
                        "        'sign-trx-alt' => 'sign-trx-alt',",
                        "        'sign-try-alt' => 'sign-try-alt',",
                        "        'sign-usd-alt' => 'sign-usd-alt',",
                        "        'sign-usd-alt2' => 'sign-usd-alt2',",
                        "        'sign-usdc-alt' => 'sign-usdc-alt',",
                        "        'sign-usdt-alt' => 'sign-usdt-alt',",
                        "        'sign-visa-alt' => 'sign-visa-alt',",
                        "        'sign-vnd-alt' => 'sign-vnd-alt',",
                        "        'sign-waves-alt' => 'sign-waves-alt',",
                        "        'sign-xem-alt' => 'sign-xem-alt',",
                        "        'sign-xrp-new-alt' => 'sign-xrp-new-alt',",
                        "        'sign-xrp-old-alt' => 'sign-xrp-old-alt',",
                        "        'sign-zcash-alt' => 'sign-zcash-alt',",
                        "        'chevron-left' => 'chevron-left',",
                        "        'chevron-right' => 'chevron-right',",
                        "        'chevron-up' => 'chevron-up',",
                        "        'chevron-down' => 'chevron-down',",
                        "        'chevron-left-round' => 'chevron-left-round',",
                        "        'chevron-right-round' => 'chevron-right-round',",
                        "        'chevron-up-round' => 'chevron-up-round',",
                        "        'chevron-down-round' => 'chevron-down-round',",
                        "        'chevron-left-round-fill' => 'chevron-left-round-fill',",
                        "        'chevron-right-round-fill' => 'chevron-right-round-fill',",
                        "        'chevron-up-round-fill' => 'chevron-up-round-fill',",
                        "        'chevron-down-round-fill' => 'chevron-down-round-fill',",
                        "        'chevron-left-c' => 'chevron-left-c',",
                        "        'chevron-right-c' => 'chevron-right-c',",
                        "        'chevron-up-c' => 'chevron-up-c',",
                        "        'chevron-down-c' => 'chevron-down-c',",
                        "        'chevron-left-fill-c' => 'chevron-left-fill-c',",
                        "        'chevron-right-fill-c' => 'chevron-right-fill-c',",
                        "        'chevron-up-fill-c' => 'chevron-up-fill-c',",
                        "        'chevron-down-fill-c' => 'chevron-down-fill-c',",
                        "        'chevron-left-circle' => 'chevron-left-circle',",
                        "        'chevron-right-circle' => 'chevron-right-circle',",
                        "        'chevron-up-circle' => 'chevron-up-circle',",
                        "        'chevron-down-circle' => 'chevron-down-circle',",
                        "        'chevron-left-circle-fill' => 'chevron-left-circle-fill',",
                        "        'chevron-right-circle-fill' => 'chevron-right-circle-fill',",
                        "        'chevron-up-circle-fill' => 'chevron-up-circle-fill',",
                        "        'chevron-down-circle-fill' => 'chevron-down-circle-fill',",
                        "        'caret-left' => 'caret-left',",
                        "        'caret-right' => 'caret-right',",
                        "        'caret-up' => 'caret-up',",
                        "        'caret-down' => 'caret-down',",
                        "        'caret-left-fill' => 'caret-left-fill',",
                        "        'caret-right-fill' => 'caret-right-fill',",
                        "        'caret-up-fill' => 'caret-up-fill',",
                        "        'caret-down-fill' => 'caret-down-fill',",
                        "        'sort' => 'sort',",
                        "        'sort-up' => 'sort-up',",
                        "        'sort-down' => 'sort-down',",
                        "        'sort-fill' => 'sort-fill',",
                        "        'sort-up-fill' => 'sort-up-fill',",
                        "        'sort-down-fill' => 'sort-down-fill',",
                        "        'sort-v' => 'sort-v',",
                        "        'swap-v' => 'swap-v',",
                        "        'swap' => 'swap',",
                        "        'arrow-left-round' => 'arrow-left-round',",
                        "        'arrow-right-round' => 'arrow-right-round',",
                        "        'arrow-up-round' => 'arrow-up-round',",
                        "        'arrow-down-round' => 'arrow-down-round',",
                        "        'arrow-left-round-fill' => 'arrow-left-round-fill',",
                        "        'arrow-right-round-fill' => 'arrow-right-round-fill',",
                        "        'arrow-up-round-fill' => 'arrow-up-round-fill',",
                        "        'arrow-down-round-fill' => 'arrow-down-round-fill',",
                        "        'arrow-left-c' => 'arrow-left-c',",
                        "        'arrow-right-c' => 'arrow-right-c',",
                        "        'arrow-up-c' => 'arrow-up-c',",
                        "        'arrow-down-c' => 'arrow-down-c',",
                        "        'arrow-left-fill-c' => 'arrow-left-fill-c',",
                        "        'arrow-right-fill-c' => 'arrow-right-fill-c',",
                        "        'arrow-up-fill-c' => 'arrow-up-fill-c',",
                        "        'arrow-down-fill-c' => 'arrow-down-fill-c',",
                        "        'arrow-left-circle' => 'arrow-left-circle',",
                        "        'arrow-right-circle' => 'arrow-right-circle',",
                        "        'arrow-up-circle' => 'arrow-up-circle',",
                        "        'arrow-down-circle' => 'arrow-down-circle',",
                        "        'arrow-left-circle-fill' => 'arrow-left-circle-fill',",
                        "        'arrow-up-circle-fill' => 'arrow-up-circle-fill',",
                        "        'arrow-down-circle-fill' => 'arrow-down-circle-fill',",
                        "        'arrow-right-circle-fill' => 'arrow-right-circle-fill',",
                        "        'chevrons-left' => 'chevrons-left',",
                        "        'chevrons-right' => 'chevrons-right',",
                        "        'chevrons-up' => 'chevrons-up',",
                        "        'chevrons-down' => 'chevrons-down',",
                        "        'first' => 'first',",
                        "        'last' => 'last',",
                        "        'back-ios' => 'back-ios',",
                        "        'forward-ios' => 'forward-ios',",
                        "        'upword-ios' => 'upword-ios',",
                        "        'downward-ios' => 'downward-ios',",
                        "        'back-alt' => 'back-alt',",
                        "        'forward-alt' => 'forward-alt',",
                        "        'upword-alt' => 'upword-alt',",
                        "        'downward-alt' => 'downward-alt',",
                        "        'back-alt-fill' => 'back-alt-fill',",
                        "        'forward-alt-fill' => 'forward-alt-fill',",
                        "        'upword-alt-fill' => 'upword-alt-fill',",
                        "        'downward-alt-fill' => 'downward-alt-fill',",
                        "        'arrow-long-left' => 'arrow-long-left',",
                        "        'arrow-long-right' => 'arrow-long-right',",
                        "        'arrow-long-up' => 'arrow-long-up',",
                        "        'arrow-long-down' => 'arrow-long-down',",
                        "        'arrow-left' => 'arrow-left',",
                        "        'arrow-right' => 'arrow-right',",
                        "        'arrow-up' => 'arrow-up',",
                        "        'arrow-down' => 'arrow-down',",
                        "        'arrow-up-left' => 'arrow-up-left',",
                        "        'arrow-up-right' => 'arrow-up-right',",
                        "        'arrow-down-left' => 'arrow-down-left',",
                        "        'arrow-down-right' => 'arrow-down-right',",
                        "        'arrow-to-left' => 'arrow-to-left',",
                        "        'arrow-to-right' => 'arrow-to-right',",
                        "        'arrow-to-up' => 'arrow-to-up',",
                        "        'arrow-to-down' => 'arrow-to-down',",
                        "        'arrow-from-left' => 'arrow-from-left',",
                        "        'arrow-from-right' => 'arrow-from-right',",
                        "        'arrow-from-up' => 'arrow-from-up',",
                        "        'arrow-from-down' => 'arrow-from-down',",
                        "        'curve-down-left' => 'curve-down-left',",
                        "        'curve-up-right' => 'curve-up-right',",
                        "        'curve-up-left' => 'curve-up-left',",
                        "        'curve-down-right' => 'curve-down-right',",
                        "        'curve-left-up' => 'curve-left-up',",
                        "        'curve-right-up' => 'curve-right-up',",
                        "        'curve-left-down' => 'curve-left-down',",
                        "        'curve-right-down' => 'curve-right-down',",
                        "        'back-arrow' => 'back-arrow',",
                        "        'forward-arrow' => 'forward-arrow',",
                        "        'back-arrow-fill' => 'back-arrow-fill',",
                        "        'forward-arrow-fill' => 'forward-arrow-fill',",
                        "        'navigate' => 'navigate',",
                        "        'navigate-up' => 'navigate-up',",
                        "        'navigate-fill' => 'navigate-fill',",
                        "        'navigate-up-fill' => 'navigate-up-fill',",
                        "        'send' => 'send',",
                        "        'send-alt' => 'send-alt',",
                        "        'unfold-less' => 'unfold-less',",
                        "        'unfold-more' => 'unfold-more',",
                        "        'exchange-v' => 'exchange-v',",
                        "        'exchange' => 'exchange',",
                        "        'expand' => 'expand',",
                        "        'shrink' => 'shrink',",
                        "        'focus' => 'focus',",
                        "        'maximize' => 'maximize',",
                        "        'minimize' => 'minimize',",
                        "        'maximize-alt' => 'maximize-alt',",
                        "        'minimize-alt' => 'minimize-alt',",
                        "        'shuffle' => 'shuffle',",
                        "        'cross-sm' => 'cross-sm',",
                        "        'cross' => 'cross',",
                        "        'cross-round' => 'cross-round',",
                        "        'cross-circle' => 'cross-circle',",
                        "        'cross-c' => 'cross-c',",
                        "        'cross-round-fill' => 'cross-round-fill',",
                        "        'cross-circle-fill' => 'cross-circle-fill',",
                        "        'cross-fill-c' => 'cross-fill-c',",
                        "        'na' => 'na',",
                        "        'check' => 'check',",
                        "        'check-thick' => 'check-thick',",
                        "        'done' => 'done',",
                        "        'check-round' => 'check-round',",
                        "        'check-circle' => 'check-circle',",
                        "        'check-c' => 'check-c',",
                        "        'check-round-fill' => 'check-round-fill',",
                        "        'check-circle-fill' => 'check-circle-fill',",
                        "        'check-fill-c' => 'check-fill-c',",
                        "        'check-circle-cut' => 'check-circle-cut',",
                        "        'check-round-cut' => 'check-round-cut',",
                        "        'bullet' => 'bullet',",
                        "        'circle' => 'circle',",
                        "        'square' => 'square',",
                        "        'square-c' => 'square-c',",
                        "        'bullet-fill' => 'bullet-fill',",
                        "        'circle-fill' => 'circle-fill',",
                        "        'square-fill' => 'square-fill',",
                        "        'square-fill-c' => 'square-fill-c',",
                        "        'plus-sm' => 'plus-sm',",
                        "        'minus-sm' => 'minus-sm',",
                        "        'plus' => 'plus',",
                        "        'minus' => 'minus',",
                        "        'plus-round' => 'plus-round',",
                        "        'minus-round' => 'minus-round',",
                        "        'plus-circle' => 'plus-circle',",
                        "        'minus-circle' => 'minus-circle',",
                        "        'plus-c' => 'plus-c',",
                        "        'minus-c' => 'minus-c',",
                        "        'plus-round-fill' => 'plus-round-fill',",
                        "        'plus-circle-fill' => 'plus-circle-fill',",
                        "        'minus-round-fill' => 'minus-round-fill',",
                        "        'minus-circle-fill' => 'minus-circle-fill',",
                        "        'plus-fill-c' => 'plus-fill-c',",
                        "        'minus-fill-c' => 'minus-fill-c',",
                        "        'plus-medi' => 'plus-medi',",
                        "        'plus-medi-fill' => 'plus-medi-fill',",
                        "        'equal-sm' => 'equal-sm',",
                        "        'equal' => 'equal',",
                        "        'calc' => 'calc',",
                        "        'search' => 'search',",
                        "        'zoom-out' => 'zoom-out',",
                        "        'zoom-in' => 'zoom-in',",
                        "        'play' => 'play',",
                        "        'play-fill' => 'play-fill',",
                        "        'play-circle' => 'play-circle',",
                        "        'play-circle-fill' => 'play-circle-fill',",
                        "        'pause' => 'pause',",
                        "        'pause-fill' => 'pause-fill',",
                        "        'pause-circle' => 'pause-circle',",
                        "        'pause-circle-fill' => 'pause-circle-fill',",
                        "        'stop' => 'stop',",
                        "        'stop-fill' => 'stop-fill',",
                        "        'stop-circle' => 'stop-circle',",
                        "        'stop-circle-fill' => 'stop-circle-fill',",
                        "        'rewind' => 'rewind',",
                        "        'forward' => 'forward',",
                        "        'rewind-fill' => 'rewind-fill',",
                        "        'forward-fill' => 'forward-fill',",
                        "        'step-back' => 'step-back',",
                        "        'step-forward' => 'step-forward',",
                        "        'vol-off' => 'vol-off',",
                        "        'vol-no' => 'vol-no',",
                        "        'vol-half' => 'vol-half',",
                        "        'vol' => 'vol',",
                        "        'mic' => 'mic',",
                        "        'mic-off' => 'mic-off',",
                        "        'video' => 'video',",
                        "        'video-off' => 'video-off',",
                        "        'video-fill' => 'video-fill',",
                        "        'loader' => 'loader',",
                        "        'power' => 'power',",
                        "        'signout' => 'signout',",
                        "        'signin' => 'signin',",
                        "        'upload' => 'upload',",
                        "        'download' => 'download',",
                        "        'alert-circle' => 'alert-circle',",
                        "        'alert' => 'alert',",
                        "        'caution' => 'caution',",
                        "        'report' => 'report',",
                        "        'alert-c' => 'alert-c',",
                        "        'alert-circle-fill' => 'alert-circle-fill',",
                        "        'alert-fill' => 'alert-fill',",
                        "        'caution-fill' => 'caution-fill',",
                        "        'report-fill' => 'report-fill',",
                        "        'alert-fill-c' => 'alert-fill-c',",
                        "        'info-i' => 'info-i',",
                        "        'info' => 'info',",
                        "        'info-fill' => 'info-fill',",
                        "        'help' => 'help',",
                        "        'help-fill' => 'help-fill',",
                        "        'archived' => 'archived',",
                        "        'archive' => 'archive',",
                        "        'unarchive' => 'unarchive',",
                        "        'archived-fill' => 'archived-fill',",
                        "        'archive-fill' => 'archive-fill',",
                        "        'unarchive-fill' => 'unarchive-fill',",
                        "        'bag' => 'bag',",
                        "        'bag-fill' => 'bag-fill',",
                        "        'bell' => 'bell',",
                        "        'bell-off' => 'bell-off',",
                        "        'bell-fill' => 'bell-fill',",
                        "        'bell-off-fill' => 'bell-off-fill',",
                        "        'wifi' => 'wifi',",
                        "        'wifi-off' => 'wifi-off',",
                        "        'live' => 'live',",
                        "        'signal' => 'signal',",
                        "        'bluetooth' => 'bluetooth',",
                        "        'blank-alt' => 'blank-alt',",
                        "        'blank' => 'blank',",
                        "        'blank-fill' => 'blank-fill',",
                        "        'block-over' => 'block-over',",
                        "        'book-read' => 'book-read',",
                        "        'book' => 'book',",
                        "        'book-fill' => 'book-fill',",
                        "        'bulb-fill' => 'bulb-fill',",
                        "        'bulb' => 'bulb',",
                        "        'calendar-alt-fill' => 'calendar-alt-fill',",
                        "        'calendar-alt' => 'calendar-alt',",
                        "        'calendar-booking-fill' => 'calendar-booking-fill',",
                        "        'calendar-booking' => 'calendar-booking',",
                        "        'calendar-check-fill' => 'calendar-check-fill',",
                        "        'calendar-check' => 'calendar-check',",
                        "        'calendar-fill' => 'calendar-fill',",
                        "        'calendar' => 'calendar',",
                        "        'calender-date-fill' => 'calender-date-fill',",
                        "        'calender-date' => 'calender-date',",
                        "        'call' => 'call',",
                        "        'call-alt' => 'call-alt',",
                        "        'call-alt-fill' => 'call-alt-fill',",
                        "        'call-fill' => 'call-fill',",
                        "        'camera-fill' => 'camera-fill',",
                        "        'camera' => 'camera',",
                        "        'capsule' => 'capsule',",
                        "        'capsule-fill' => 'capsule-fill',",
                        "        'cards' => 'cards',",
                        "        'cards-fill' => 'cards-fill',",
                        "        'cart' => 'cart',",
                        "        'cart-fill' => 'cart-fill',",
                        "        'cc' => 'cc',",
                        "        'cc-alt' => 'cc-alt',",
                        "        'cc-alt2' => 'cc-alt2',",
                        "        'cc-secure' => 'cc-secure',",
                        "        'cc-new' => 'cc-new',",
                        "        'cc-off' => 'cc-off',",
                        "        'cc-fill' => 'cc-fill',",
                        "        'cc-alt-fill' => 'cc-alt-fill',",
                        "        'cc-alt2-fill' => 'cc-alt2-fill',",
                        "        'cc-secure-fill' => 'cc-secure-fill',",
                        "        'msg-circle' => 'msg-circle',",
                        "        'chat-circle' => 'chat-circle',",
                        "        'msg' => 'msg',",
                        "        'chat' => 'chat',",
                        "        'question-alt' => 'question-alt',",
                        "        'question' => 'question',",
                        "        'msg-circle-fill' => 'msg-circle-fill',",
                        "        'chat-circle-fill' => 'chat-circle-fill',",
                        "        'msg-fill' => 'msg-fill',",
                        "        'chat-fill' => 'chat-fill',",
                        "        'clip-h' => 'clip-h',",
                        "        'clip-v' => 'clip-v',",
                        "        'clip' => 'clip',",
                        "        'link-alt' => 'link-alt',",
                        "        'unlink' => 'unlink',",
                        "        'unlink-alt' => 'unlink-alt',",
                        "        'link-h' => 'link-h',",
                        "        'link-v' => 'link-v',",
                        "        'link' => 'link',",
                        "        'clipboard' => 'clipboard',",
                        "        'clipboad-check' => 'clipboad-check',",
                        "        'clipboard-fill' => 'clipboard-fill',",
                        "        'clipboad-check-fill' => 'clipboad-check-fill',",
                        "        'clock' => 'clock',",
                        "        'clock-fill' => 'clock-fill',",
                        "        'cloud' => 'cloud',",
                        "        'upload-cloud' => 'upload-cloud',",
                        "        'download-cloud' => 'download-cloud',",
                        "        'cloud-fill' => 'cloud-fill',",
                        "        'contact' => 'contact',",
                        "        'contact-fill' => 'contact-fill',",
                        "        'coffee' => 'coffee',",
                        "        'coffee-fill' => 'coffee-fill',",
                        "        'box-view' => 'box-view',",
                        "        'col-view' => 'col-view',",
                        "        'sidebar' => 'sidebar',",
                        "        'layout' => 'layout',",
                        "        'table-view' => 'table-view',",
                        "        'layout2' => 'layout2',",
                        "        'row-view' => 'row-view',",
                        "        'dot-box' => 'dot-box',",
                        "        'layout-fill' => 'layout-fill',",
                        "        'box-view-fill' => 'box-view-fill',",
                        "        'sidebar-fill' => 'sidebar-fill',",
                        "        'table-view-fill' => 'table-view-fill',",
                        "        'dot-box-fill' => 'dot-box-fill',",
                        "        'template' => 'template',",
                        "        'browser' => 'browser',",
                        "        'toolbar' => 'toolbar',",
                        "        'browser-fill' => 'browser-fill',",
                        "        'toolbar-fill' => 'toolbar-fill',",
                        "        'template-fill' => 'template-fill',",
                        "        'box' => 'box',",
                        "        'package' => 'package',",
                        "        'layer' => 'layer',",
                        "        'layers' => 'layers',",
                        "        'panel' => 'panel',",
                        "        'server' => 'server',",
                        "        'layer-fill' => 'layer-fill',",
                        "        'layers-fill' => 'layers-fill',",
                        "        'package-fill' => 'package-fill',",
                        "        'panel-fill' => 'panel-fill',",
                        "        'server-fill' => 'server-fill',",
                        "        'color-palette' => 'color-palette',",
                        "        'color-palette-fill' => 'color-palette-fill',",
                        "        'copy' => 'copy',",
                        "        'copy-fill' => 'copy-fill',",
                        "        'crop-alt' => 'crop-alt',",
                        "        'crop' => 'crop',",
                        "        'target' => 'target',",
                        "        'crosshair' => 'crosshair',",
                        "        'crosshair-fill' => 'crosshair-fill',",
                        "        'db-fill' => 'db-fill',",
                        "        'db' => 'db',",
                        "        'hard-drive' => 'hard-drive',",
                        "        'cpu' => 'cpu',",
                        "        'disk' => 'disk',",
                        "        'pen' => 'pen',",
                        "        'edit-alt' => 'edit-alt',",
                        "        'pen-fill' => 'pen-fill',",
                        "        'edit-alt-fill' => 'edit-alt-fill',",
                        "        'pen-alt-fill' => 'pen-alt-fill',",
                        "        'edit-fill' => 'edit-fill',",
                        "        'edit' => 'edit',",
                        "        'external-alt' => 'external-alt',",
                        "        'external' => 'external',",
                        "        'eye-alt' => 'eye-alt',",
                        "        'eye-alt-fill' => 'eye-alt-fill',",
                        "        'eye' => 'eye',",
                        "        'eye-fill' => 'eye-fill',",
                        "        'eye-off' => 'eye-off',",
                        "        'eye-off-fill' => 'eye-off-fill',",
                        "        'file' => 'file',",
                        "        'file-minus' => 'file-minus',",
                        "        'file-plus' => 'file-plus',",
                        "        'file-remove' => 'file-remove',",
                        "        'file-check' => 'file-check',",
                        "        'file-code' => 'file-code',",
                        "        'file-docs' => 'file-docs',",
                        "        'file-img' => 'file-img',",
                        "        'file-doc' => 'file-doc',",
                        "        'file-pdf' => 'file-pdf',",
                        "        'file-xls' => 'file-xls',",
                        "        'file-zip' => 'file-zip',",
                        "        'file-download' => 'file-download',",
                        "        'file-text' => 'file-text',",
                        "        'files' => 'files',",
                        "        'file-fill' => 'file-fill',",
                        "        'file-minus-fill' => 'file-minus-fill',",
                        "        'file-plus-fill' => 'file-plus-fill',",
                        "        'file-remove-fill' => 'file-remove-fill',",
                        "        'file-check-fill' => 'file-check-fill',",
                        "        'file-text-fill' => 'file-text-fill',",
                        "        'files-fill' => 'files-fill',",
                        "        'folder' => 'folder',",
                        "        'folder-minus' => 'folder-minus',",
                        "        'folder-plus' => 'folder-plus',",
                        "        'folder-remove' => 'folder-remove',",
                        "        'folder-check' => 'folder-check',",
                        "        'folder-list' => 'folder-list',",
                        "        'folders' => 'folders',",
                        "        'folder-fill' => 'folder-fill',",
                        "        'folders-fill' => 'folders-fill',",
                        "        'filter-alt' => 'filter-alt',",
                        "        'sort-line' => 'sort-line',",
                        "        'filter-fill' => 'filter-fill',",
                        "        'filter' => 'filter',",
                        "        'flag' => 'flag',",
                        "        'flag-fill' => 'flag-fill',",
                        "        'notify' => 'notify',",
                        "        'dashboard' => 'dashboard',",
                        "        'dashboard-fill' => 'dashboard-fill',",
                        "        'grid-sq' => 'grid-sq',",
                        "        'grid' => 'grid',",
                        "        'grid-c' => 'grid-c',",
                        "        'grid-alt' => 'grid-alt',",
                        "        'grid-plus' => 'grid-plus',",
                        "        'grid-add-c' => 'grid-add-c',",
                        "        'grid-fill' => 'grid-fill',",
                        "        'grid-fill-c' => 'grid-fill-c',",
                        "        'grid-alt-fill' => 'grid-alt-fill',",
                        "        'grid-plus-fill' => 'grid-plus-fill',",
                        "        'grid-add-fill-c' => 'grid-add-fill-c',",
                        "        'grid-box-alt-fill' => 'grid-box-alt-fill',",
                        "        'grid-box-alt' => 'grid-box-alt',",
                        "        'grid-box' => 'grid-box',",
                        "        'grid-box-fill' => 'grid-box-fill',",
                        "        'grid-line' => 'grid-line',",
                        "        'menu-alt-left' => 'menu-alt-left',",
                        "        'menu-alt-r' => 'menu-alt-r',",
                        "        'menu-alt' => 'menu-alt',",
                        "        'menu-center' => 'menu-center',",
                        "        'menu-left' => 'menu-left',",
                        "        'menu-right' => 'menu-right',",
                        "        'menu' => 'menu',",
                        "        'trend-up' => 'trend-up',",
                        "        'trend-down' => 'trend-down',",
                        "        'line-chart-down' => 'line-chart-down',",
                        "        'line-chart-up' => 'line-chart-up',",
                        "        'line-chart' => 'line-chart',",
                        "        'bar-chart' => 'bar-chart',",
                        "        'bar-chart-alt' => 'bar-chart-alt',",
                        "        'chart-up' => 'chart-up',",
                        "        'chart-down' => 'chart-down',",
                        "        'growth' => 'growth',",
                        "        'growth-fill' => 'growth-fill',",
                        "        'bar-chart-fill' => 'bar-chart-fill',",
                        "        'bar-c' => 'bar-c',",
                        "        'bar-fill-c' => 'bar-fill-c',",
                        "        'pie' => 'pie',",
                        "        'pie-alt' => 'pie-alt',",
                        "        'pie-fill' => 'pie-fill',",
                        "        'activity' => 'activity',",
                        "        'activity-alt' => 'activity-alt',",
                        "        'activity-round' => 'activity-round',",
                        "        'activity-round-fill' => 'activity-round-fill',",
                        "        'meter' => 'meter',",
                        "        'speed' => 'speed',",
                        "        'happy' => 'happy',",
                        "        'sad' => 'sad',",
                        "        'meh' => 'meh',",
                        "        'happy-fill' => 'happy-fill',",
                        "        'sad-fill' => 'sad-fill',",
                        "        'meh-fill' => 'meh-fill',",
                        "        'home' => 'home',",
                        "        'home-alt' => 'home-alt',",
                        "        'home-fill' => 'home-fill',",
                        "        'img' => 'img',",
                        "        'img-fill' => 'img-fill',",
                        "        'inbox' => 'inbox',",
                        "        'inbox-in' => 'inbox-in',",
                        "        'inbox-out' => 'inbox-out',",
                        "        'inbox-fill' => 'inbox-fill',",
                        "        'inbox-in-fill' => 'inbox-in-fill',",
                        "        'inbox-out-fill' => 'inbox-out-fill',",
                        "        'link-group' => 'link-group',",
                        "        'lock' => 'lock',",
                        "        'lock-alt' => 'lock-alt',",
                        "        'lock-fill' => 'lock-fill',",
                        "        'lock-alt-fill' => 'lock-alt-fill',",
                        "        'unlock' => 'unlock',",
                        "        'unlock-fill' => 'unlock-fill',",
                        "        'mail' => 'mail',",
                        "        'emails' => 'emails',",
                        "        'mail-fill' => 'mail-fill',",
                        "        'emails-fill' => 'emails-fill',",
                        "        'map-pin' => 'map-pin',",
                        "        'location' => 'location',",
                        "        'map' => 'map',",
                        "        'map-pin-fill' => 'map-pin-fill',",
                        "        'list' => 'list',",
                        "        'list-ol' => 'list-ol',",
                        "        'align-center' => 'align-center',",
                        "        'align-justify' => 'align-justify',",
                        "        'align-left' => 'align-left',",
                        "        'align-right' => 'align-right',",
                        "        'list-check' => 'list-check',",
                        "        'list-round' => 'list-round',",
                        "        'card-view' => 'card-view',",
                        "        'list-fill' => 'list-fill',",
                        "        'save' => 'save',",
                        "        'save-fill' => 'save-fill',",
                        "        'move' => 'move',",
                        "        'scissor' => 'scissor',",
                        "        'text' => 'text',",
                        "        'text-a' => 'text-a',",
                        "        'bold' => 'bold',",
                        "        'italic' => 'italic',",
                        "        'underline' => 'underline',",
                        "        'percent' => 'percent',",
                        "        'at' => 'at',",
                        "        'hash' => 'hash',",
                        "        'code' => 'code',",
                        "        'code-download' => 'code-download',",
                        "        'terminal' => 'terminal',",
                        "        'cmd' => 'cmd',",
                        "        'sun' => 'sun',",
                        "        'sun-fill' => 'sun-fill',",
                        "        'moon-fill' => 'moon-fill',",
                        "        'moon' => 'moon',",
                        "        'light' => 'light',",
                        "        'light-fill' => 'light-fill',",
                        "        'more-v' => 'more-v',",
                        "        'more-h' => 'more-h',",
                        "        'more-h-alt' => 'more-h-alt',",
                        "        'more-v-alt' => 'more-v-alt',",
                        "        'music' => 'music',",
                        "        'movie' => 'movie',",
                        "        'offer' => 'offer',",
                        "        'offer-fill' => 'offer-fill',",
                        "        'opt-alt' => 'opt-alt',",
                        "        'opt' => 'opt',",
                        "        'opt-dot-alt' => 'opt-dot-alt',",
                        "        'opt-dot' => 'opt-dot',",
                        "        'opt-dot-fill' => 'opt-dot-fill',",
                        "        'opt-alt-fill' => 'opt-alt-fill',",
                        "        'user-alt' => 'user-alt',",
                        "        'user-alt-fill' => 'user-alt-fill',",
                        "        'user' => 'user',",
                        "        'users' => 'users',",
                        "        'user-add' => 'user-add',",
                        "        'user-remove' => 'user-remove',",
                        "        'user-check' => 'user-check',",
                        "        'user-cross' => 'user-cross',",
                        "        'account-setting' => 'account-setting',",
                        "        'account-setting-alt' => 'account-setting-alt',",
                        "        'user-list' => 'user-list',",
                        "        'user-fill' => 'user-fill',",
                        "        'users-fill' => 'users-fill',",
                        "        'user-add-fill' => 'user-add-fill',",
                        "        'user-remove-fill' => 'user-remove-fill',",
                        "        'user-check-fill' => 'user-check-fill',",
                        "        'user-cross-fill' => 'user-cross-fill',",
                        "        'account-setting-fill' => 'account-setting-fill',",
                        "        'user-list-fill' => 'user-list-fill',",
                        "        'user-circle' => 'user-circle',",
                        "        'user-circle-fill' => 'user-circle-fill',",
                        "        'user-c' => 'user-c',",
                        "        'user-fill-c' => 'user-fill-c',",
                        "        'user-round' => 'user-round',",
                        "        'printer' => 'printer',",
                        "        'printer-fill' => 'printer-fill',",
                        "        'laptop' => 'laptop',",
                        "        'monitor' => 'monitor',",
                        "        'tablet' => 'tablet',",
                        "        'mobile' => 'mobile',",
                        "        'undo' => 'undo',",
                        "        'redo' => 'redo',",
                        "        'reload-alt' => 'reload-alt',",
                        "        'reload' => 'reload',",
                        "        'regen-alt' => 'regen-alt',",
                        "        'regen' => 'regen',",
                        "        'invest' => 'invest',",
                        "        'history' => 'history',",
                        "        'histroy' => 'histroy',",
                        "        'update' => 'update',",
                        "        'repeat' => 'repeat',",
                        "        'repeat-v' => 'repeat-v',",
                        "        'tranx' => 'tranx',",
                        "        'reply-all' => 'reply-all',",
                        "        'reply' => 'reply',",
                        "        'reply-fill' => 'reply-fill',",
                        "        'reply-all-fill' => 'reply-all-fill',",
                        "        'notes' => 'notes',",
                        "        'note-add' => 'note-add',",
                        "        'notes-alt' => 'notes-alt',",
                        "        'article' => 'article',",
                        "        'text-rich' => 'text-rich',",
                        "        'todo' => 'todo',",
                        "        'report-profit' => 'report-profit',",
                        "        'reports-alt' => 'reports-alt',",
                        "        'reports' => 'reports',",
                        "        'task' => 'task',",
                        "        'note-add-c' => 'note-add-c',",
                        "        'task-c' => 'task-c',",
                        "        'todo-fill' => 'todo-fill',",
                        "        'note-add-fill-c' => 'note-add-fill-c',",
                        "        'task-fill-c' => 'task-fill-c',",
                        "        'scan-fill' => 'scan-fill',",
                        "        'scan' => 'scan',",
                        "        'qr' => 'qr',",
                        "        'money' => 'money',",
                        "        'coins' => 'coins',",
                        "        'coin' => 'coin',",
                        "        'coin-alt' => 'coin-alt',",
                        "        'coin-alt-fill' => 'coin-alt-fill',",
                        "        'setting-alt-fill' => 'setting-alt-fill',",
                        "        'setting-alt' => 'setting-alt',",
                        "        'setting-fill' => 'setting-fill',",
                        "        'setting' => 'setting',",
                        "        'share-alt' => 'share-alt',",
                        "        'share-fill' => 'share-fill',",
                        "        'share' => 'share',",
                        "        'network' => 'network',",
                        "        'rss' => 'rss',",
                        "        'shield' => 'shield',",
                        "        'shield-star' => 'shield-star',",
                        "        'shield-check' => 'shield-check',",
                        "        'shield-alert' => 'shield-alert',",
                        "        'shield-off' => 'shield-off',",
                        "        'security' => 'security',",
                        "        'policy' => 'policy',",
                        "        'shield-alert-fill' => 'shield-alert-fill',",
                        "        'shield-check-fill' => 'shield-check-fill',",
                        "        'shield-fill' => 'shield-fill',",
                        "        'shield-half' => 'shield-half',",
                        "        'shield-star-fill' => 'shield-star-fill',",
                        "        'policy-fill' => 'policy-fill',",
                        "        'spark' => 'spark',",
                        "        'spark-off' => 'spark-off',",
                        "        'spark-fill' => 'spark-fill',",
                        "        'spark-off-fill' => 'spark-off-fill',",
                        "        'wallet' => 'wallet',",
                        "        'wallet-alt' => 'wallet-alt',",
                        "        'wallet-in' => 'wallet-in',",
                        "        'wallet-out' => 'wallet-out',",
                        "        'wallet-saving' => 'wallet-saving',",
                        "        'wallet-fill' => 'wallet-fill',",
                        "        'star' => 'star',",
                        "        'star-half' => 'star-half',",
                        "        'star-half-fill' => 'star-half-fill',",
                        "        'star-fill' => 'star-fill',",
                        "        'star-round' => 'star-round',",
                        "        'heart' => 'heart',",
                        "        'heart-fill' => 'heart-fill',",
                        "        'swap-alt-fill' => 'swap-alt-fill',",
                        "        'swap-alt' => 'swap-alt',",
                        "        'thumbs-down' => 'thumbs-down',",
                        "        'thumbs-up' => 'thumbs-up',",
                        "        'tag' => 'tag',",
                        "        'tag-alt' => 'tag-alt',",
                        "        'tags' => 'tags',",
                        "        'tag-fill' => 'tag-fill',",
                        "        'tag-alt-fill' => 'tag-alt-fill',",
                        "        'tags-fill' => 'tags-fill',",
                        "        'bookmark' => 'bookmark',",
                        "        'bookmark-fill' => 'bookmark-fill',",
                        "        'label' => 'label',",
                        "        'label-fill' => 'label-fill',",
                        "        'priority' => 'priority',",
                        "        'piority' => 'piority',",
                        "        'priority-fill' => 'priority-fill',",
                        "        'piority-fill' => 'piority-fill',",
                        "        'label-alt' => 'label-alt',",
                        "        'label-alt-fill' => 'label-alt-fill',",
                        "        'ticket-alt' => 'ticket-alt',",
                        "        'ticket' => 'ticket',",
                        "        'ticket-minus' => 'ticket-minus',",
                        "        'ticket-plus' => 'ticket-plus',",
                        "        'ticket-alt-fill' => 'ticket-alt-fill',",
                        "        'ticket-fill' => 'ticket-fill',",
                        "        'ticket-minus-fill' => 'ticket-minus-fill',",
                        "        'ticket-plus-fill' => 'ticket-plus-fill',",
                        "        'toggle-off' => 'toggle-off',",
                        "        'toggle-on' => 'toggle-on',",
                        "        'trash-alt' => 'trash-alt',",
                        "        'trash-empty' => 'trash-empty',",
                        "        'trash' => 'trash',",
                        "        'trash-fill' => 'trash-fill',",
                        "        'trash-empty-fill' => 'trash-empty-fill',",
                        "        'delete-fill' => 'delete-fill',",
                        "        'delete' => 'delete',",
                        "        'alarm-alt' => 'alarm-alt',",
                        "        'alarm' => 'alarm',",
                        "        'bugs' => 'bugs',",
                        "        'building' => 'building',",
                        "        'building-fill' => 'building-fill',",
                        "        'headphone' => 'headphone',",
                        "        'headphone-fill' => 'headphone-fill',",
                        "        'aperture' => 'aperture',",
                        "        'help-alt' => 'help-alt',",
                        "        'award' => 'award',",
                        "        'briefcase' => 'briefcase',",
                        "        'gift' => 'gift',",
                        "        'globe' => 'globe',",
                        "        'umbrela' => 'umbrela',",
                        "        'truck' => 'truck',",
                        "        'sign-usd' => 'sign-usd',",
                        "        'sign-dollar' => 'sign-dollar',",
                        "        'sign-mxn' => 'sign-mxn',",
                        "        'sign-sgd' => 'sign-sgd',",
                        "        'sign-euro' => 'sign-euro',",
                        "        'sign-eur' => 'sign-eur',",
                        "        'sign-gbp' => 'sign-gbp',",
                        "        'sign-pound' => 'sign-pound',",
                        "        'sign-thb' => 'sign-thb',",
                        "        'sign-inr' => 'sign-inr',",
                        "        'sign-jpy' => 'sign-jpy',",
                        "        'sign-yen' => 'sign-yen',",
                        "        'sign-cny' => 'sign-cny',",
                        "        'sign-kobo' => 'sign-kobo',",
                        "        'sign-chf' => 'sign-chf',",
                        "        'sign-vnd' => 'sign-vnd',",
                        "        'sign-php' => 'sign-php',",
                        "        'sign-brl' => 'sign-brl',",
                        "        'sign-idr' => 'sign-idr',",
                        "        'sign-czk' => 'sign-czk',",
                        "        'sign-hkd' => 'sign-hkd',",
                        "        'sign-kr' => 'sign-kr',",
                        "        'sign-dkk' => 'sign-dkk',",
                        "        'sign-nok' => 'sign-nok',",
                        "        'sign-sek' => 'sign-sek',",
                        "        'sign-rub' => 'sign-rub',",
                        "        'sign-myr' => 'sign-myr',",
                        "        'sign-pln' => 'sign-pln',",
                        "        'sign-try' => 'sign-try',",
                        "        'sign-waves' => 'sign-waves',",
                        "        'sign-trx' => 'sign-trx',",
                        "        'sign-xem' => 'sign-xem',",
                        "        'sign-mxr' => 'sign-mxr',",
                        "        'sign-usdc' => 'sign-usdc',",
                        "        'sign-steller' => 'sign-steller',",
                        "        'sign-steem' => 'sign-steem',",
                        "        'sign-usdt' => 'sign-usdt',",
                        "        'tether' => 'tether',",
                        "        'sign-btc' => 'sign-btc',",
                        "        'bitcoin' => 'bitcoin',",
                        "        'sign-bch' => 'sign-bch',",
                        "        'bitcoin-cash' => 'bitcoin-cash',",
                        "        'sign-bnb' => 'sign-bnb',",
                        "        'sign-ada' => 'sign-ada',",
                        "        'sign-zcash' => 'sign-zcash',",
                        "        'sign-eth' => 'sign-eth',",
                        "        'sign-dash' => 'sign-dash',",
                        "        'sign-xrp-old' => 'sign-xrp-old',",
                        "        'sign-eos' => 'sign-eos',",
                        "        'sign-xrp' => 'sign-xrp',",
                        "        'american-express' => 'american-express',",
                        "        'cc-jcb' => 'cc-jcb',",
                        "        'cc-mc' => 'cc-mc',",
                        "        'cc-discover' => 'cc-discover',",
                        "        'cc-visa' => 'cc-visa',",
                        "        'cc-paypal' => 'cc-paypal',",
                        "        'cc-stripe' => 'cc-stripe',",
                        "        'amazon-pay' => 'amazon-pay',",
                        "        'amazon-pay-fill' => 'amazon-pay-fill',",
                        "        'google-pay' => 'google-pay',",
                        "        'google-pay-fill' => 'google-pay-fill',",
                        "        'apple-pay' => 'apple-pay',",
                        "        'apple-pay-fill' => 'apple-pay-fill',",
                        "        'angular' => 'angular',",
                        "        'react' => 'react',",
                        "        'laravel' => 'laravel',",
                        "        'html5' => 'html5',",
                        "        'css3-fill' => 'css3-fill',",
                        "        'css3' => 'css3',",
                        "        'js' => 'js',",
                        "        'php' => 'php',",
                        "        'python' => 'python',",
                        "        'bootstrap' => 'bootstrap',",
                        "        'ebay' => 'ebay',",
                        "        'google-wallet' => 'google-wallet',",
                        "        'google-drive' => 'google-drive',",
                        "        'google-play-store' => 'google-play-store',",
                        "        'android' => 'android',",
                        "        'blogger-fill' => 'blogger-fill',",
                        "        'blogger' => 'blogger',",
                        "        'hangout' => 'hangout',",
                        "        'apple-store' => 'apple-store',",
                        "        'apple-store-ios' => 'apple-store-ios',",
                        "        'stripe' => 'stripe',",
                        "        'apple' => 'apple',",
                        "        'microsoft' => 'microsoft',",
                        "        'windows' => 'windows',",
                        "        'amazon' => 'amazon',",
                        "        'paypal-alt' => 'paypal-alt',",
                        "        'airbnb' => 'airbnb',",
                        "        'adobe' => 'adobe',",
                        "        'mailchimp' => 'mailchimp',",
                        "        'dropbox' => 'dropbox',",
                        "        'digital-ocean' => 'digital-ocean',",
                        "        'slack' => 'slack',",
                        "        'slack-hash' => 'slack-hash',",
                        "        'stack-overflow' => 'stack-overflow',",
                        "        'soundcloud' => 'soundcloud',",
                        "        'blackberry' => 'blackberry',",
                        "        'spotify' => 'spotify',",
                        "        'kickstarter' => 'kickstarter',",
                        "        'houzz' => 'houzz',",
                        "        'vine' => 'vine',",
                        "        'yelp' => 'yelp',",
                        "        'yoast' => 'yoast',",
                        "        'envato' => 'envato',",
                        "        'wordpress' => 'wordpress',",
                        "        'wp' => 'wp',",
                        "        'wordpress-fill' => 'wordpress-fill',",
                        "        'elementor' => 'elementor',",
                        "        'joomla' => 'joomla',",
                        "        'megento' => 'megento',",
                        "        'git' => 'git',",
                        "        'github' => 'github',",
                        "        'github-round' => 'github-round',",
                        "        'github-circle' => 'github-circle',",
                        "        'dribbble' => 'dribbble',",
                        "        'dribbble-round' => 'dribbble-round',",
                        "        'behance' => 'behance',",
                        "        'behance-fill' => 'behance-fill',",
                        "        'flickr' => 'flickr',",
                        "        'flickr-round' => 'flickr-round',",
                        "        'medium' => 'medium',",
                        "        'medium-round' => 'medium-round',",
                        "        'reddit' => 'reddit',",
                        "        'reddit-round' => 'reddit-round',",
                        "        'reddit-circle' => 'reddit-circle',",
                        "        'google' => 'google',",
                        "        'facebook-f' => 'facebook-f',",
                        "        'facebook-fill' => 'facebook-fill',",
                        "        'facebook-circle' => 'facebook-circle',",
                        "        'instagram' => 'instagram',",
                        "        'instagram-round' => 'instagram-round',",
                        "        'linkedin' => 'linkedin',",
                        "        'linkedin-round' => 'linkedin-round',",
                        "        'twitter' => 'twitter',",
                        "        'twitter-round' => 'twitter-round',",
                        "        'pinterest' => 'pinterest',",
                        "        'pinterest-round' => 'pinterest-round',",
                        "        'pinterest-circle' => 'pinterest-circle',",
                        "        'tumblr' => 'tumblr',",
                        "        'tumblr-round' => 'tumblr-round',",
                        "        'skype' => 'skype',",
                        "        'viber' => 'viber',",
                        "        'whatsapp' => 'whatsapp',",
                        "        'whatsapp-round' => 'whatsapp-round',",
                        "        'snapchat' => 'snapchat',",
                        "        'snapchat-fill' => 'snapchat-fill',",
                        "        'telegram' => 'telegram',",
                        "        'telegram-circle' => 'telegram-circle',",
                        "        'youtube' => 'youtube',",
                        "        'youtube-fill' => 'youtube-fill',",
                        "        'youtube-round' => 'youtube-round',",
                        "        'vimeo' => 'vimeo',",
                        "        'vimeo-fill' => 'vimeo-fill',",
                        "    ];",
                        "",
                        "    /**",
                        "     * @author bernard-ng <bernard@devscast.tech>",
                        "     */",
                        "    public static function get(string $name): string",
                        "    {",
                        "        if (array_key_exists($name, self::ICONS)) {",
                        "            return $name;",
                        "        }",
                        "        throw new OutOfBoundsException(sprintf('Unknown \"%s\" icon', $name));",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/Symfony/Twig/IconExtension.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace Infrastructure\\Shared\\Symfony\\Twig;",
                        "",
                        "use InvalidArgumentException;",
                        "use Symfony\\Component\\HttpFoundation\\Request;",
                        "use Symfony\\Component\\HttpFoundation\\RequestStack;",
                        "use Symfony\\Component\\Intl\\Countries;",
                        "use Twig\\Extension\\AbstractExtension;",
                        "use Twig\\TwigFilter;",
                        "use Twig\\TwigFunction;",
                        "",
                        "/**",
                        " * Class IconExtension.",
                        " *",
                        " * @author bernard-ng <bernard@devscast.tech>",
                        " */",
                        "class IconExtension extends AbstractExtension",
                        "{",
                        "    private const FLAG_PROVIDER_URL = 'https://flagcdn.com/%s/%s.png';",
                        "",
                        "    private const FLAG_SIZES = ['16x12', '32x24', '64x32', '128x96', '256x192'];",
                        "",
                        "    private ?Request $request;",
                        "",
                        "    public function __construct(RequestStack $stack)",
                        "    {",
                        "        $this->request = $stack->getCurrentRequest();",
                        "    }",
                        "",
                        "    /**",
                        "     * @author bernard-ng <bernard@devscast.tech>",
                        "     */",
                        "    public function getFunctions(): array",
                        "    {",
                        "        return [",
                        "            new TwigFunction('devscast_icon', [$this, 'icon'], [",
                        "                'is_safe' => ['html'],",
                        "            ]),",
                        "            new TwigFunction('devscast_flag', [$this, 'flag'], [",
                        "                'is_safe' => ['html'],",
                        "            ]),",
                        "        ];",
                        "    }",
                        "",
                        "    /**",
                        "     * @author bernard-ng <bernard@devscast.tech>",
                        "     */",
                        "    public function getFilters(): array",
                        "    {",
                        "        return [",
                        "            new TwigFilter('icon', [$this, 'icon'], [",
                        "                'is_safe' => ['html'],",
                        "            ]),",
                        "            new TwigFilter('flag', [$this, 'flag'], [",
                        "                'is_safe' => ['html'],",
                        "            ]),",
                        "        ];",
                        "    }",
                        "",
                        "    public function flag(?string $name = null, string $size = '32x24'): ?string",
                        "    {",
                        "        if (null === $name) {",
                        "            return null;",
                        "        }",
                        "",
                        "        if (Countries::exists($name)) {",
                        "            if (in_array($size, self::FLAG_SIZES, true)) {",
                        "                [$width, $height] = explode('x', $size);",
                        "                $country = Countries::getName($name, $this->request?->getLocale());",
                        "                $url = sprintf(self::FLAG_PROVIDER_URL, $size, strtolower($name));",
                        "",
                        "                return <<<HTML",
                        "                    <img src=\"${url}\" width=\"${width}\" height=\"${height}\" alt=\"${country}\" aria-label=\"${country}\">",
                        "                HTML;",
                        "            }",
                        "            throw new InvalidArgumentException('Invalid size, try one of ' . implode(', ', self::FLAG_SIZES));",
                        "        }",
                        "        throw new InvalidArgumentException('Invalid country alpha 2 code');",
                        "    }",
                        "",
                        "    public function icon(string $name): string",
                        "    {",
                        "        $name = Icon::get($name);",
                        "",
                        "        return <<< HTML",
                        "            <em class=\"icon ni ni-{$name}\" aria-label=\"icon ${name}\" role=\"img\"></em>",
                        "        HTML;",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/Symfony/Twig/MailerExtension.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace Infrastructure\\Shared\\Symfony\\Twig;",
                        "",
                        "use Parsedown;",
                        "use Twig\\Extension\\AbstractExtension;",
                        "use Twig\\TwigFilter;",
                        "",
                        "/**",
                        " * Class MailerExtension.",
                        " *",
                        " * @author bernard-ng <bernard@devscast.tech>",
                        " */",
                        "final class MailerExtension extends AbstractExtension",
                        "{",
                        "    public function getFilters(): array",
                        "    {",
                        "        return [",
                        "            new TwigFilter('markdown_email', [$this, 'markdown'], [",
                        "                'needs_context' => true,",
                        "                'is_safe' => ['html'],",
                        "            ]),",
                        "            new TwigFilter('text_email', [$this, 'text']),",
                        "        ];",
                        "    }",
                        "",
                        "    public function markdown(array $context, string $content): string",
                        "    {",
                        "        if (($context['_format'] ?? 'text') === 'text') {",
                        "            return $content;",
                        "        }",
                        "        $content = preg_replace('/^(^ {2,})(\\S+[ \\S]*)$/m', '${2}', $content);",
                        "",
                        "        return (new Parsedown())->setSafeMode(false)->text($content);",
                        "    }",
                        "",
                        "    public function text(string $content): string",
                        "    {",
                        "        $content = strip_tags($content);",
                        "        $content = preg_replace('/^(^ {2,})(\\S+[ \\S]*)$/m', '${2}', $content) ?: '';",
                        "",
                        "        return preg_replace(\"/([\\r\\n] *){3,}/\", \"\\n\\n\", $content) ?: '';",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/Symfony/Twig/Sidebar/AbstractSidebar.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace Infrastructure\\Shared\\Symfony\\Twig\\Sidebar;",
                        "",
                        "/**",
                        " * Class AbstractSidebar.",
                        " *",
                        " * @author bernard-ng <bernard@devscast.tech>",
                        " */",
                        "abstract class AbstractSidebar",
                        "{",
                        "    /**",
                        "     * @author bernard-ng <bernard@devscast.tech>",
                        "     */",
                        "    abstract public function build(SidebarBuilderInterface $builder): SidebarCollection;",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/Symfony/Twig/Sidebar/SidebarBuilder.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace Infrastructure\\Shared\\Symfony\\Twig\\Sidebar;",
                        "",
                        "use ArrayIterator;",
                        "use Infrastructure\\Shared\\Symfony\\Twig\\Sidebar\\Type\\SidebarGroup;",
                        "use Infrastructure\\Shared\\Symfony\\Twig\\Sidebar\\Type\\SidebarHeader;",
                        "use Infrastructure\\Shared\\Symfony\\Twig\\Sidebar\\Type\\SidebarItemInterface;",
                        "use Infrastructure\\Shared\\Symfony\\Twig\\Sidebar\\Type\\SidebarLink;",
                        "",
                        "/**",
                        " * Class SidebarBuilder.",
                        " *",
                        " * @author bernard-ng <bernard@devscast.tech>",
                        " */",
                        "class SidebarBuilder implements \\IteratorAggregate, SidebarBuilderInterface",
                        "{",
                        "    private array $children = [];",
                        "",
                        "    private string $translation_domain = 'messages';",
                        "",
                        "    public function add(SidebarItemInterface $item): self",
                        "    {",
                        "        $this->children[$item->getLabel()] = $item;",
                        "",
                        "        return $this;",
                        "    }",
                        "",
                        "    public function get(string $name): array",
                        "    {",
                        "        if (! isset($this->children[$name])) {",
                        "            throw new \\OutOfBoundsException(sprintf('The child with the name \"%s\" does not exist.', $name));",
                        "        }",
                        "",
                        "        return $this->children[$name];",
                        "    }",
                        "",
                        "    public function remove(string $name): self",
                        "    {",
                        "        if (! isset($this->children[$name])) {",
                        "            throw new \\LogicException(sprintf('The child with the name \"%s\" does not exist.', $name));",
                        "        }",
                        "",
                        "        unset($this->children[$name]);",
                        "",
                        "        return $this;",
                        "    }",
                        "",
                        "    public function create(): SidebarCollection",
                        "    {",
                        "        $items = [];",
                        "        foreach ($this->all() as $child) {",
                        "            $items[] = $child;",
                        "        }",
                        "",
                        "        $options = [",
                        "            'translation_domain' => $this->translation_domain,",
                        "        ];",
                        "",
                        "        return SidebarCollection::fromArray($items, $options);",
                        "    }",
                        "",
                        "    public function has(string $name): bool",
                        "    {",
                        "        return isset($this->children[$name]);",
                        "    }",
                        "",
                        "    public function all(): array",
                        "    {",
                        "        return $this->children;",
                        "    }",
                        "",
                        "    public function getIterator(): ArrayIterator",
                        "    {",
                        "        return new ArrayIterator($this->all());",
                        "    }",
                        "",
                        "    public function count(): int",
                        "    {",
                        "        return \\count($this->children);",
                        "    }",
                        "",
                        "    public function setTranslationDomain(string $domain): SidebarBuilderInterface",
                        "    {",
                        "        $this->translation_domain = $domain;",
                        "",
                        "        return $this;",
                        "    }",
                        "",
                        "    public function addLink(string $route, string $label, ?string $icon = null, ?string $badge = null, array $params = []): SidebarBuilderInterface",
                        "    {",
                        "        $this->add(new SidebarLink($route, $label, $icon, $badge, $params));",
                        "",
                        "        return $this;",
                        "    }",
                        "",
                        "    public function addGroup(string $label, string $icon, array $links = []): SidebarBuilderInterface",
                        "    {",
                        "        $this->add(new SidebarGroup($label, $icon, $links));",
                        "",
                        "        return $this;",
                        "    }",
                        "",
                        "    public function addHeader(string $label): SidebarBuilderInterface",
                        "    {",
                        "        $this->add(new SidebarHeader($label));",
                        "",
                        "        return $this;",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/Symfony/Twig/Sidebar/SidebarBuilderInterface.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace Infrastructure\\Shared\\Symfony\\Twig\\Sidebar;",
                        "",
                        "use Infrastructure\\Shared\\Symfony\\Twig\\Sidebar\\Type\\SidebarItemInterface;",
                        "",
                        "/**",
                        " * Interface SidebarBuilderInterface.",
                        " *",
                        " * @author bernard-ng <bernard@devscast.tech>",
                        " */",
                        "interface SidebarBuilderInterface extends \\Traversable, \\Countable",
                        "{",
                        "    public function add(SidebarItemInterface $item): self;",
                        "",
                        "    public function addLink(string $route, string $label, ?string $icon = null, ?string $badge = null, array $params = []): self;",
                        "",
                        "    public function addGroup(string $label, string $icon, array $links = []): self;",
                        "",
                        "    public function addHeader(string $label): self;",
                        "",
                        "    public function get(string $name): array;",
                        "",
                        "    public function remove(string $name): self;",
                        "",
                        "    public function has(string $name): bool;",
                        "",
                        "    public function all(): array;",
                        "",
                        "    public function create(): SidebarCollection;",
                        "",
                        "    public function setTranslationDomain(string $domain): self;",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/Symfony/Twig/Sidebar/SidebarCollection.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace Infrastructure\\Shared\\Symfony\\Twig\\Sidebar;",
                        "",
                        "use ArrayIterator;",
                        "use Infrastructure\\Shared\\Symfony\\Twig\\Sidebar\\Type\\SidebarItemInterface;",
                        "",
                        "/**",
                        " * Collection of sidebar items",
                        " * Class SidebarItemCollection.",
                        " *",
                        " * @author bernard-ng <bernard@devscast.tech>",
                        " */",
                        "class SidebarCollection implements \\IteratorAggregate",
                        "{",
                        "    /**",
                        "     * @var SidebarItemInterface[]",
                        "     */",
                        "    private array $items = [];",
                        "",
                        "    private array $options = [];",
                        "",
                        "    private function __construct()",
                        "    {",
                        "    }",
                        "",
                        "    public static function fromArray(array $items, array $options): self",
                        "    {",
                        "        return (new self())->setItems($items)",
                        "            ->setOptions($options);",
                        "    }",
                        "",
                        "    public function getItems(): array",
                        "    {",
                        "        return $this->items;",
                        "    }",
                        "",
                        "    public function setItems(array $items): self",
                        "    {",
                        "        $this->items = $items;",
                        "",
                        "        return $this;",
                        "    }",
                        "",
                        "    public function getIterator(): ArrayIterator",
                        "    {",
                        "        return new ArrayIterator($this->items);",
                        "    }",
                        "",
                        "    public function getOptions(): array",
                        "    {",
                        "        return $this->options;",
                        "    }",
                        "",
                        "    public function setOptions(array $options): self",
                        "    {",
                        "        $this->options = $options;",
                        "",
                        "        return $this;",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/Symfony/Twig/Sidebar/SidebarExtension.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace Infrastructure\\Shared\\Symfony\\Twig\\Sidebar;",
                        "",
                        "use Infrastructure\\Shared\\Symfony\\Twig\\Sidebar\\Type\\SidebarGroup;",
                        "use Infrastructure\\Shared\\Symfony\\Twig\\Sidebar\\Type\\SidebarHeader;",
                        "use Infrastructure\\Shared\\Symfony\\Twig\\Sidebar\\Type\\SidebarLink;",
                        "use Symfony\\Component\\DependencyInjection\\ContainerInterface;",
                        "use Symfony\\Component\\HttpFoundation\\RequestStack;",
                        "use Symfony\\Component\\Routing\\RouterInterface;",
                        "use Symfony\\Contracts\\Translation\\TranslatorInterface;",
                        "use Twig\\Extension\\AbstractExtension;",
                        "use Twig\\TwigFilter;",
                        "use Twig\\TwigFunction;",
                        "",
                        "/**",
                        " * Class SidebarExtension.",
                        " *",
                        " * @author bernard-ng <bernard@devscast.tech>",
                        " */",
                        "class SidebarExtension extends AbstractExtension",
                        "{",
                        "    private string $route;",
                        "",
                        "    private string $path;",
                        "",
                        "    private string $defaultSidebarClass;",
                        "",
                        "    public function __construct(",
                        "        readonly RequestStack $stack,",
                        "        private readonly SidebarBuilderInterface $builder,",
                        "        private readonly TranslatorInterface $translator,",
                        "        private readonly RouterInterface $router,",
                        "        private readonly ContainerInterface $container",
                        "    ) {",
                        "        $this->path = strval($stack->getCurrentRequest()?->getPathInfo());",
                        "        $this->route = strval($stack->getCurrentRequest()?->attributes?->get('_route'));",
                        "        $this->defaultSidebarClass = strval($this->container->getParameter('devscast.administration.default_sidebar'));",
                        "    }",
                        "",
                        "    public function getFunctions(): array",
                        "    {",
                        "        return [",
                        "            new TwigFunction('sidebar_render', [$this, 'renderSidebar'], [",
                        "                'is_safe' => ['html'],",
                        "            ]),",
                        "            new TwigFunction('active_class', [$this, 'activeClass']),",
                        "            new TwigFunction('active_route', [$this, 'activeRoute']),",
                        "        ];",
                        "    }",
                        "",
                        "    public function getFilters(): array",
                        "    {",
                        "        return [",
                        "            new TwigFilter('sidebar', [$this, 'renderSidebar'], [",
                        "                'is_safe' => ['html'],",
                        "            ]),",
                        "        ];",
                        "    }",
                        "",
                        "    public function activeClass(",
                        "        string|array $path,",
                        "        string $activeClass = 'active',",
                        "        string $inactiveClass = '',",
                        "        bool $relative = false",
                        "    ): string {",
                        "        if (is_array($path)) {",
                        "            [$route, $params] = $path;",
                        "            if ($this->router->generate($route, $params) === $this->path) {",
                        "                return $activeClass;",
                        "            }",
                        "        } elseif (is_string($path)) {",
                        "            if (",
                        "                (true === $relative && $this->isCurrentPathContains($path)) ||",
                        "                $this->isCurrentPathMatches($path)",
                        "            ) {",
                        "                return $activeClass;",
                        "            }",
                        "        }",
                        "",
                        "        return $inactiveClass;",
                        "    }",
                        "",
                        "    public function activeRoute(string $path, bool $relative = false): bool",
                        "    {",
                        "        if ($relative) {",
                        "            return str_contains($this->route, $path);",
                        "        }",
                        "",
                        "        return $this->route === $path;",
                        "    }",
                        "",
                        "    public function renderSidebar(?string $sidebarClass = null): string",
                        "    {",
                        "        $sidebar = $this->container->get(null === $sidebarClass ? $this->defaultSidebarClass : $sidebarClass);",
                        "",
                        "        if ($sidebar instanceof AbstractSidebar) {",
                        "            $collection = $sidebar->build($this->builder);",
                        "            $translation_domain = $collection->getOptions()['translation_domain'];",
                        "",
                        "            $s = '';",
                        "            foreach ($collection as $item) {",
                        "                if ($item instanceof SidebarLink) {",
                        "                    $s = $this->renderItem($s, $item, $translation_domain);",
                        "                }",
                        "",
                        "                if ($item instanceof SidebarHeader) {",
                        "                    $s .= <<< HTML",
                        "                        <li class=\"nk-menu-heading\">",
                        "                            <h6 ",
                        "                                class=\"overline-title text-primary-alt\" ",
                        "                                aria-label=\"{$this->translator->trans($item->getLabel(), domain: $translation_domain)}\"",
                        "                            >",
                        "                                {$this->translator->trans($item->getLabel(), domain: $translation_domain)}",
                        "                            </h6>",
                        "                        </li>",
                        "                    HTML;",
                        "                }",
                        "",
                        "                if ($item instanceof SidebarGroup) {",
                        "                    $links = $this->renderItems($item->getLinks(), $translation_domain, $item);",
                        "                    $groupActiveClass = $item->isIsActive() ? 'active' : '';",
                        "                    $s .= <<< HTML",
                        "                        <li class=\"nk-menu-item has-sub {$groupActiveClass}\">",
                        "                            <a ",
                        "                                href=\"#\" ",
                        "                                class=\"nk-menu-link nk-menu-toggle\" ",
                        "                                aria-label=\"{$this->translator->trans($item->getLabel(), domain: $translation_domain)}\"",
                        "                            >",
                        "                                <span class=\"nk-menu-icon\"><em class=\"icon ni ni-{$item->getIcon()}\"></em></span>",
                        "                                <span class=\"nk-menu-text\">{$this->translator->trans($item->getLabel(), domain: $translation_domain)}</span>",
                        "                            </a>",
                        "                            <ul class=\"nk-menu-sub\">",
                        "                                {$links}",
                        "                            </ul>",
                        "                        </li>",
                        "                    HTML;",
                        "                }",
                        "            }",
                        "",
                        "            return $s;",
                        "        }",
                        "",
                        "        throw new \\RuntimeException(sprintf('The sidebar must be an instance of %s', AbstractSidebar::class));",
                        "    }",
                        "",
                        "    /**",
                        "     * @param SidebarLink[] $items",
                        "     */",
                        "    private function renderItems(array $items, string $translation_domain = 'messages', ?SidebarGroup $parent = null): string",
                        "    {",
                        "        $html = '';",
                        "        foreach ($items as $item) {",
                        "            $item->setParent($parent);",
                        "            $html = $this->renderItem($html, $item, $translation_domain);",
                        "        }",
                        "",
                        "        return $html;",
                        "    }",
                        "",
                        "    private function renderItem(string $html, SidebarLink $item, string $translation_domain = 'messages'): string",
                        "    {",
                        "        $label = $this->translator->trans($item->getLabel(), domain: $translation_domain);",
                        "        $badge = $this->translator->trans($item->getBadge(), domain: $translation_domain);",
                        "        $url = $this->router->generate($item->getRoute(), $item->getParams());",
                        "        $activeClass = $this->activeClass($url, activeClass: 'active current-page', relative: true);",
                        "        $currentClass = $this->activeClass($item->getRoute(), activeClass: 'aria-current=\"page\"');",
                        "        $icon = ! empty($item->getIcon()) ?",
                        "            \"<span class='nk-menu-icon'><em class='icon ni ni-{$item->getIcon()}'></em></span>\" : '';",
                        "",
                        "        $active = 'active current-page' === $activeClass;",
                        "        if ($active && null !== $item->getParent()) {",
                        "            $item->getParent()->setIsActive(true);",
                        "        }",
                        "",
                        "        $html .= <<< HTML",
                        "            <li class=\"nk-menu-item ${activeClass}\">",
                        "                <a ${currentClass} aria-label=\"${label}\" title=\"${label}\" href=\"${url}\" class=\"nk-menu-link\">",
                        "                    ${icon}",
                        "                    <span class=\"nk-menu-text\">${label}</span>",
                        "                    <span class=\"nk-menu-badge bg-primary\">${badge}</span>",
                        "                </a>",
                        "            </li>",
                        "        HTML;",
                        "",
                        "        return $html;",
                        "    }",
                        "",
                        "    private function isCurrentPathMatches(string $path): bool",
                        "    {",
                        "        return $this->path === $path || $this->route === $path;",
                        "    }",
                        "",
                        "    private function isCurrentPathContains(string $path): bool",
                        "    {",
                        "        return str_contains($this->path, $path) || str_contains($this->route, $path);",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/Symfony/Twig/Sidebar/Type/SidebarGroup.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace Infrastructure\\Shared\\Symfony\\Twig\\Sidebar\\Type;",
                        "",
                        "/**",
                        " * Class SidebarGroup.",
                        " *",
                        " * @author bernard-ng <bernard@devscast.tech>",
                        " */",
                        "class SidebarGroup implements SidebarItemInterface",
                        "{",
                        "    /**",
                        "     * @var SidebarLink[]",
                        "     */",
                        "    private array $links;",
                        "",
                        "    private string $label;",
                        "",
                        "    private string $icon;",
                        "",
                        "    private bool $is_active = false;",
                        "",
                        "    /**",
                        "     * SidebarGroup constructor.",
                        "     *",
                        "     * @author bernard-ng <bernard@devscast.tech>",
                        "     */",
                        "    public function __construct(string $label, string $icon, array $links = [])",
                        "    {",
                        "        $this->links = $links;",
                        "        $this->label = $label;",
                        "        $this->icon = $icon;",
                        "    }",
                        "",
                        "    /**",
                        "     * @return SidebarLink[]",
                        "     */",
                        "    public function getLinks(): array",
                        "    {",
                        "        return $this->links;",
                        "    }",
                        "",
                        "    /**",
                        "     * @param SidebarLink[] $links",
                        "     */",
                        "    public function setLinks(array $links): self",
                        "    {",
                        "        $this->links = $links;",
                        "",
                        "        return $this;",
                        "    }",
                        "",
                        "    public function getIcon(): string",
                        "    {",
                        "        return $this->icon;",
                        "    }",
                        "",
                        "    public function setIcon(string $icon): self",
                        "    {",
                        "        $this->icon = $icon;",
                        "",
                        "        return $this;",
                        "    }",
                        "",
                        "    public function getLabel(): string",
                        "    {",
                        "        return $this->label;",
                        "    }",
                        "",
                        "    public function setLabel(string $label): self",
                        "    {",
                        "        $this->label = $label;",
                        "",
                        "        return $this;",
                        "    }",
                        "",
                        "    public function isIsActive(): bool",
                        "    {",
                        "        return $this->is_active;",
                        "    }",
                        "",
                        "    public function setIsActive(bool $is_active): self",
                        "    {",
                        "        $this->is_active = $is_active;",
                        "",
                        "        return $this;",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/Symfony/Twig/Sidebar/Type/SidebarHeader.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace Infrastructure\\Shared\\Symfony\\Twig\\Sidebar\\Type;",
                        "",
                        "/**",
                        " * Class SidebarHeader.",
                        " *",
                        " * @author bernard-ng <bernard@devscast.tech>",
                        " */",
                        "class SidebarHeader implements SidebarItemInterface",
                        "{",
                        "    private string $label;",
                        "",
                        "    /**",
                        "     * SidebarHeader constructor.",
                        "     *",
                        "     * @author bernard-ng <bernard@devscast.tech>",
                        "     */",
                        "    public function __construct(string $label)",
                        "    {",
                        "        $this->label = $label;",
                        "    }",
                        "",
                        "    /**",
                        "     * @author bernard-ng <bernard@devscast.tech>",
                        "     */",
                        "    public function getLabel(): string",
                        "    {",
                        "        return $this->label;",
                        "    }",
                        "",
                        "    /**",
                        "     * @return SidebarHeader",
                        "     *",
                        "     * @author bernard-ng <bernard@devscast.tech>",
                        "     */",
                        "    public function setLabel(string $label): self",
                        "    {",
                        "        $this->label = $label;",
                        "",
                        "        return $this;",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/Symfony/Twig/Sidebar/Type/SidebarItemInterface.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace Infrastructure\\Shared\\Symfony\\Twig\\Sidebar\\Type;",
                        "",
                        "/**",
                        " * Interface SidebarItemInterface.",
                        " *",
                        " * @author bernard-ng <bernard@devscast.tech>",
                        " */",
                        "interface SidebarItemInterface",
                        "{",
                        "    public function getLabel(): string;",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/Symfony/Twig/Sidebar/Type/SidebarLink.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace Infrastructure\\Shared\\Symfony\\Twig\\Sidebar\\Type;",
                        "",
                        "/**",
                        " * Class SidebarItem.",
                        " *",
                        " * @author bernard-ng <bernard@devscast.tech>",
                        " */",
                        "class SidebarLink implements SidebarItemInterface",
                        "{",
                        "    private string $icon;",
                        "",
                        "    private string $badge;",
                        "",
                        "    private ?SidebarGroup $parent = null;",
                        "",
                        "    public function __construct(",
                        "        private string $route,",
                        "        private string $label,",
                        "        ?string $icon = null,",
                        "        ?string $badge = null,",
                        "        private array $params = []",
                        "    ) {",
                        "        $this->icon = null === $icon ? '' : $icon;",
                        "        $this->badge = null === $badge ? '' : $badge;",
                        "    }",
                        "",
                        "    public function getIcon(): ?string",
                        "    {",
                        "        return $this->icon;",
                        "    }",
                        "",
                        "    public function setIcon(string $icon): self",
                        "    {",
                        "        $this->icon = $icon;",
                        "",
                        "        return $this;",
                        "    }",
                        "",
                        "    public function getLabel(): string",
                        "    {",
                        "        return $this->label;",
                        "    }",
                        "",
                        "    public function setLabel(string $label): self",
                        "    {",
                        "        $this->label = $label;",
                        "",
                        "        return $this;",
                        "    }",
                        "",
                        "    public function getParams(): array",
                        "    {",
                        "        return $this->params;",
                        "    }",
                        "",
                        "    public function setParams(array $params): self",
                        "    {",
                        "        $this->params = $params;",
                        "",
                        "        return $this;",
                        "    }",
                        "",
                        "    public function getRoute(): string",
                        "    {",
                        "        return $this->route;",
                        "    }",
                        "",
                        "    public function setRoute(string $route): self",
                        "    {",
                        "        $this->route = $route;",
                        "",
                        "        return $this;",
                        "    }",
                        "",
                        "    public function getBadge(): string",
                        "    {",
                        "        return $this->badge;",
                        "    }",
                        "",
                        "    public function setBadge(string $badge): self",
                        "    {",
                        "        $this->badge = $badge;",
                        "",
                        "        return $this;",
                        "    }",
                        "",
                        "    public function getParent(): ?SidebarGroup",
                        "    {",
                        "        return $this->parent;",
                        "    }",
                        "",
                        "    public function setParent(?SidebarGroup $parent): self",
                        "    {",
                        "        $this->parent = $parent;",
                        "",
                        "        return $this;",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Infrastructure/Shared/Symfony/Twig/UI/MainSidebar.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace Infrastructure\\Shared\\Symfony\\Twig\\UI;",
                        "",
                        "use Infrastructure\\Shared\\Symfony\\Twig\\Sidebar\\AbstractSidebar;",
                        "use Infrastructure\\Shared\\Symfony\\Twig\\Sidebar\\SidebarBuilderInterface;",
                        "use Infrastructure\\Shared\\Symfony\\Twig\\Sidebar\\SidebarCollection;",
                        "use Infrastructure\\Shared\\Symfony\\Twig\\Sidebar\\Type\\SidebarLink;",
                        "",
                        "/**",
                        " * class MainSidebar.",
                        " *",
                        " * @author bernard-ng <bernard@devscast.tech>",
                        " */",
                        "final class MainSidebar extends AbstractSidebar",
                        "{",
                        "    public function build(SidebarBuilderInterface $builder): SidebarCollection",
                        "    {",
                        "        $builder",
                        "            ->addHeader('Gestions des utilisateurs')",
                        "        ;",
                        "",
                        "        return $builder->create();",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/domain/.gitignore": {
                    "contents": [
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/index.html.twig": {
                    "contents": [
                        "{% extends '@admin/shared/layout/base.html.twig' %}",
                        "{% block title 'Administration' %}",
                        "",
                        "{% block body %}",
                        "    <div class=\"alert alert-pro alert-primary\">",
                        "        <div class=\"alert-text\"><h6>Hello {{ app.user.name }},</h6>",
                        "            <p>Your order has been successfully placed for diposit. Your will be redirect for make your payment.</p>",
                        "        </div>",
                        "    </div>",
                        "{% endblock %}",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/component/_flash.html.twig": {
                    "contents": [
                        "{% for message in app.flashes('success') %}",
                        "    <app-toast type=\"success\" message=\"{{ message | nl2br }}\"></app-toast>",
                        "{% endfor %}",
                        "{% for message in app.flashes('error') %}",
                        "    <app-toast type=\"error\" message=\"{{ message | nl2br }}\"></app-toast>",
                        "{% endfor %}",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/component/_footer.html.twig": {
                    "contents": [
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/component/_form.html.twig": {
                    "contents": [
                        "{% form_theme form '@admin/shared/layout/form_theme.html.twig' %}",
                        "",
                        "<turbo-frame id=\"form-modal-frame\">",
                        "    {{ form_start(form, {attr: {'data-turbo-frame': _turbo_frame_target ?? '_top', 'novalidate': 'novalidate'}}) }}",
                        "    {% if _turbo_frame_target %}",
                        "        {{ form_errors(form) }}",
                        "    {% endif %}",
                        "",
                        "    {{ form_rest(form) }}",
                        "    <button class=\"mt-3 btn btn-primary\">",
                        "        {{ 'save-fill' | icon }}",
                        "        <span>{{ 'global.submit' | trans([], 'messages') }}</span>",
                        "    </button>",
                        "    {{ form_end(form) }}",
                        "</turbo-frame>",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/component/_header.html.twig": {
                    "contents": [
                        "<div class=\"nk-block-head nk-block-head-lg\">",
                        "    <div class=\"nk-block-between\">",
                        "        <div class=\"nk-block-head-content\">",
                        "            <div class=\"block-head-sub\">",
                        "                {% block header_back_to %}{% endblock %}",
                        "            </div>",
                        "            <h3 class=\"nk-block-title fw-bolder\">",
                        "                {% block header_title %}",
                        "                    {% if block(\"title\") is defined %}",
                        "                        {{ block('title') | title }}",
                        "                    {% endif %}",
                        "                {% endblock %}",
                        "            </h3>",
                        "            <div class=\"nk-block-des fw-normal\">",
                        "                {% block header_description %}",
                        "                    {% if data is defined and data.getTotalItemCount is defined and data.getTotalItemCount > 0 %}",
                        "                        <span class=\"fw-bolder\">{{ data.getTotalItemCount }}</span> \u00e9l\u00e9ments,",
                        "                                                                                    page <span class=\"fw-bolder\">{{ data.getCurrentPageNumber }}</span> sur {{ data.getPageCount }}",
                        "                    {% endif %}",
                        "                {% endblock %}",
                        "            </div>",
                        "        </div>",
                        "        <div class=\"nk-block-head-content\">",
                        "            <div class=\"toggle-wrap nk-block-tools-toggle\">",
                        "                <a href=\"#\" class=\"btn btn-icon btn-trigger toggle-expand mr-n1\" data-target=\"pageMenu\">",
                        "                    {{ 'menu-alt-r' | icon }}",
                        "                </a>",
                        "                <div class=\"toggle-expand-content\" data-content=\"pageMenu\">",
                        "                    <ul class=\"nk-block-tools g-3\">",
                        "                        {% block header_action_list %}{% endblock %}",
                        "                    </ul>",
                        "                </div>",
                        "            </div>",
                        "        </div>",
                        "    </div>",
                        "</div>",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/component/_macros.html.twig": {
                    "contents": [
                        "{% macro user_data_item(label, value, options) %}",
                        "    <div class=\"profile-ud-item\">",
                        "        <div class=\"profile-ud {{ options.style ?? 'wider' }}\">",
                        "            <span class=\"profile-ud-label\">{{ label }}</span>",
                        "            <span class=\"profile-ud-value\">{{ value ? value | raw : '-' }}</span>",
                        "        </div>",
                        "    </div>",
                        "{% endmacro %}",
                        "",
                        "{% macro stats_infos(data, label) %}",
                        "    {% if data != 0.0 %}",
                        "        {{ _self.ratio(data) }}",
                        "        <span> vs. le mois pass\u00e9</span>",
                        "    {% else %}",
                        "        <span class=\"change down\">",
                        "            {{ 'alert-fill-c' | icon }}",
                        "        </span>",
                        "        <span class=\"text-danger\"> Aucun {{ label }} ce mois</span>",
                        "    {% endif %}",
                        "{% endmacro %}",
                        "",
                        "{% macro ratio(data) %}",
                        "    <span class=\"change {{ data > 0 ? 'up text-success' : 'down text-danger' }}\">",
                        "        {{  (data > 0 ? 'arrow-long-up' : 'arrow-long-down') | icon }}",
                        "        {{  data }} %",
                        "    </span>",
                        "{% endmacro %}",
                        "",
                        "{% macro user_data_link(label, value, link, options) %}",
                        "    <div class=\"profile-ud-item\">",
                        "        <div class=\"profile-ud {{ options.style ?? 'wider' }}\">",
                        "            <span class=\"profile-ud-label\">{{ label }}</span>",
                        "            <span class=\"profile-ud-value\">",
                        "                <a href=\"{{ link }}\" title=\"{{ value }}\" aria-label=\"{{ value }}\" target=\"_blank\">",
                        "                    {{ value ?? '-' }}",
                        "                </a>",
                        "            </span>",
                        "        </div>",
                        "    </div>",
                        "{% endmacro %}",
                        "",
                        "{% macro delete_icon_button(path, row, redirect) %}",
                        "<button",
                        "        class=\"text-soft btn btn-icon btn-trigger\"",
                        "        is=\"app-delete-button\"",
                        "        token=\"{{ csrf_token(\"delete_#{row.id}\") }}\"",
                        "        endpoint=\"{{ path(path, {id: row.id}) }}\"",
                        "        redirect=\"{{ redirect ? path(redirect) : '' }}\"",
                        "        title=\"{{ 'global.delete' | trans([], 'messages') }}\"",
                        ">",
                        "    {{ 'cross' | icon }}",
                        "</button>",
                        "{% endmacro %}",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/component/_modal.html.twig": {
                    "contents": [
                        "<div {{ stimulus_target('modal-form', 'modal') }} class=\"modal fade\" id=\"form-modal\" style=\"display: none;\" aria-hidden=\"true\" tabindex=\"-1\">",
                        "    <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">",
                        "        <div class=\"modal-content\">",
                        "            <div class=\"modal-header\">",
                        "                <h5 class=\"modal-title\">{{ _action }}</h5>",
                        "                <a {{ stimulus_action('modal-form', 'close')}} href=\"#\" class=\"close\" aria-label=\"Close\">{{ 'cross' | icon }}</a>",
                        "            </div>",
                        "            <turbo-frame class=\"modal-body\" id=\"{{ _id ?? 'form-modal-frame' }}\" src=\"{{ _path }}?modal=true\" loading=\"lazy\">",
                        "                <div class=\"text-center\">",
                        "                    <div class=\"spinner-grow\" style=\"width: 3rem; height: 3rem;\" role=\"status\">",
                        "                        <span class=\"visually-hidden\">Loading...</span>",
                        "                    </div>",
                        "                </div>",
                        "            </turbo-frame>",
                        "        </div>",
                        "    </div>",
                        "</div>",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/component/_navbar.html.twig": {
                    "contents": [
                        "<div class=\"nk-header nk-header-fixed is-light\">",
                        "    <div class=\"container-fluid\">",
                        "        <div class=\"nk-header-wrap\">",
                        "            <div class=\"nk-menu-trigger d-xl-none ml-n1\">",
                        "                <a href=\"#\" class=\"nk-nav-toggle nk-quick-nav-icon\" data-target=\"sidebarMenu\">",
                        "                    {{ 'menu' | icon }}",
                        "                </a>",
                        "            </div>",
                        "            <div class=\"nk-header-brand d-xl-none\">",
                        "                <a href=\"/\" class=\"logo-link\">",
                        "                    <img class=\"logo-light logo-img\" src=\"{{ asset('images/logo.png') }}\" alt=\"logo\">",
                        "                    <img class=\"logo-dark logo-img\" src=\"{{ asset('images/logo-dark.png') }}\" alt=\"logo-dark\">",
                        "                </a>",
                        "            </div>",
                        "            {% block navbar_content %}{% endblock %}",
                        "            <div class=\"nk-header-tools\">",
                        "                <ul class=\"nk-quick-nav\">",
                        "                    {% block navbar_tool_list %}{% endblock %}",
                        "                    {% if app.user %}",
                        "                        <li class=\"dropdown user-dropdown\">",
                        "                            <a href=\"#\" class=\"dropdown-toggle mr-n1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">",
                        "                                <div class=\"user-toggle\">",
                        "                                    <div class=\"user-avatar sm\">",
                        "                                        {% if app.user.avatar.name %}",
                        "                                            <img src=\"{{ vich_uploader_asset(app.user, 'avatar_file') }}\" alt=\"{{ app.user.username }}\">",
                        "                                        {% else %}",
                        "                                            {{ 'user' | icon }}",
                        "                                        {% endif %}",
                        "                                    </div>",
                        "                                    <div class=\"user-info d-none d-xl-block\">",
                        "                                        <div class=\"user-status user-status-verified\">{{ app.user.roles | last | trans([], 'messages') }}</div>",
                        "                                        <div class=\"user-name dropdown-indicator\">{{ app.user.email }}</div>",
                        "                                    </div>",
                        "                                </div>",
                        "                            </a>",
                        "                            <div class=\"dropdown-menu dropdown-menu-md dropdown-menu-right\">",
                        "                                <div class=\"dropdown-inner user-card-wrap bg-lighter d-none d-md-block\">",
                        "                                    <div class=\"user-card\">",
                        "                                        <div class=\"user-avatar\">",
                        "                                            {% if app.user.avatar.name %}",
                        "                                                <img src=\"{{ vich_uploader_asset(app.user, 'avatar_file') }}\" alt=\"{{ app.user.username }}\">",
                        "                                            {% else %}",
                        "                                                {{ 'user' | icon }}",
                        "                                            {% endif %}",
                        "                                        </div>",
                        "                                        <div class=\"user-info\">",
                        "                                            <span class=\"sub-text\">{{ app.user.username }}</span>",
                        "                                            <span class=\"sub-text\">{{ app.user.email }}</span>",
                        "                                        </div>",
                        "                                    </div>",
                        "                                </div>",
                        "                                <div class=\"dropdown-inner\">",
                        "                                    <ul class=\"link-list\">",
                        "                                        <li>",
                        "                                            <a href=\"#\" title=\"Param\u00e8tres\">",
                        "                                                {{ 'setting' | icon }}",
                        "                                                <span>Param\u00e8tres</span>",
                        "                                            </a>",
                        "                                        </li>",
                        "                                        <li>",
                        "                                            <a class=\"dark-switch\" href=\"#\">",
                        "                                                {{ 'moon' | icon }}",
                        "                                                <span>Mode Sombre</span>",
                        "                                            </a>",
                        "                                        </li>",
                        "                                        <li>",
                        "                                            <a href=\"{{ logout_url('main') }}\" title=\"D\u00e9connexion\" aria-label=\"D\u00e9connexion\">",
                        "                                                {{ 'signout' | icon }}",
                        "                                                <span>D\u00e9connexion</span>",
                        "                                            </a>",
                        "                                        </li>",
                        "                                    </ul>",
                        "                                </div>",
                        "                            </div>",
                        "                        </li>",
                        "                    {% endif %}",
                        "                </ul>",
                        "            </div>",
                        "        </div>",
                        "    </div>",
                        "</div>",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/component/_sidebar.html.twig": {
                    "contents": [
                        "<div class=\"nk-sidebar nk-sidebar-fixed is-dark\" data-content=\"sidebarMenu\">",
                        "    <div class=\"nk-sidebar-element nk-sidebar-head\">",
                        "        <div class=\"nk-sidebar-brand\">",
                        "            <a href=\"{{ path('app_index') }}\" class=\"logo-link nk-sidebar-logo\">",
                        "                <img class=\"logo-light logo-img\" src=\"{{ asset('images/logo.png') }}\" alt=\"logo\">",
                        "                <img class=\"logo-dark logo-img\" src=\"{{ asset('images/logo-dark.png') }}\" alt=\"logo-dark\">",
                        "                <img class=\"logo-small logo-img logo-img-small\" src=\"{{ asset('images/logo.png') }}\" alt=\"logo-small\">",
                        "            </a>",
                        "        </div>",
                        "        <div class=\"nk-menu-trigger me-n2\">",
                        "            <a href=\"#\" class=\"nk-nav-toggle nk-quick-nav-icon d-xl-none\" data-target=\"sidebarMenu\">",
                        "                {{ 'arrow-left' | icon }}",
                        "            </a>",
                        "            <a href=\"#\" class=\"nk-nav-compact nk-quick-nav-icon d-none d-xl-inline-flex\" data-target=\"sidebarMenu\">",
                        "                {{ 'menu' | icon }}",
                        "            </a>",
                        "        </div>",
                        "    </div>",
                        "    <div class=\"nk-sidebar-element\">",
                        "        <div class=\"nk-sidebar-content\">",
                        "            <div class=\"nk-sidebar-menu\" data-simplebar>",
                        "                <ul class=\"nk-menu\">",
                        "                    {% block sidebar_menu_list %}",
                        "                        {{ sidebar_render() }}",
                        "                    {% endblock %}",
                        "                </ul>",
                        "            </div>",
                        "        </div>",
                        "    </div>",
                        "</div>",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/component/card/_detail.html.twig": {
                    "contents": [
                        "<div class=\"card card-stretch\">",
                        "    <div class=\"card-aside-wrap\">",
                        "        <div class=\"card-content\">",
                        "            <ul class=\"nav nav-tabs nav-tabs-mb-icon nav-tabs-card\">",
                        "                {% block detail_card_tabs %}{% endblock %}",
                        "            </ul>",
                        "            <div class=\"card-inner\">",
                        "                {% block detail_card_body %}{% endblock %}",
                        "            </div>",
                        "        </div>",
                        "        {% block detail_card_aside %}{% endblock %}",
                        "    </div>",
                        "</div>",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/component/card/_empty_state.html.twig": {
                    "contents": [
                        "<div class=\"card card-stretch\">",
                        "    <div class=\"card-body\">",
                        "        <div class=\"d-flex justify-content-center align-center\">",
                        "            <div class=\"nk-block-content nk-error-ld d-flex align-center flex-column\">",
                        "                <div class=\"user-avatar lg bg-danger-dim mb-2\"><span>{{ 'alert' | icon }}</span></div>",
                        "                <p class=\"nk-error-description\">Aucune donn\u00e9e disponible pour l'instant</p>",
                        "                <a href=\"{{ _path }}\" class=\"btn btn-primary\">",
                        "                    {{ _action | default(\"Ajouter une nouvelle entr\u00e9e\") }}",
                        "                </a>",
                        "            </div>",
                        "        </div>",
                        "    </div>",
                        "</div>",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/component/card/_list.html.twig": {
                    "contents": [
                        "{% if data is defined and data | length > 0 %}",
                        "    <div class=\"card card-stretch\">",
                        "        <div class=\"card-inner-group\">",
                        "            <div class=\"card-inner\">",
                        "                <div class=\"card-title-group\">",
                        "                    <div class=\"card-title\">",
                        "                        <h5 class=\"title\">",
                        "                            {% block list_card_title %}{% endblock %}",
                        "                        </h5>",
                        "                    </div>",
                        "                    <div class=\"card-tools mr-n1\">",
                        "                        <ul class=\"btn-toolbar\">",
                        "                            {% block list_card_action_list %}{% endblock %}",
                        "                        </ul>",
                        "                    </div>",
                        "                </div>",
                        "            </div>",
                        "            <div class=\"card-inner p-0\">",
                        "                {% block list_card_table %}",
                        "                    <table class=\"table table-tranx\">",
                        "                        <thead>",
                        "                        <tr class=\"tb-tnx-head\">",
                        "                            {% block list_card_table_head %}{% endblock %}",
                        "                        </tr>",
                        "                        </thead>",
                        "                        <tbody>",
                        "                        {% block list_card_table_body %}{% endblock %}",
                        "                        </tbody>",
                        "                    </table>",
                        "                {% endblock %}",
                        "            </div>",
                        "            <div class=\"card-inner d-flex justify-content-center\">",
                        "                {% block list_card_pagination %}",
                        "                    {% if data is defined %}",
                        "                        {{ knp_pagination_render(data) }}",
                        "                    {% endif %}",
                        "                {% endblock %}",
                        "            </div>",
                        "        </div>",
                        "    </div>",
                        "{% else %}",
                        "    <div class=\"card card-stretch\">",
                        "        <div class=\"card-body\">",
                        "            <div class=\"d-flex justify-content-center align-center\">",
                        "                <div class=\"nk-block-content nk-error-ld d-flex align-center flex-column\">",
                        "                    <div class=\"user-avatar lg bg-danger-dim mb-2\"><span>{{ 'alert' | icon }}</span></div>",
                        "                    <p class=\"nk-error-description\">Aucune donn\u00e9e disponible pour l'instant</p>",
                        "                    {% if _path is defined and _action is defined  %}",
                        "                        <a href=\"{{ _path }}\" class=\"btn btn-primary\">",
                        "                            {{ _action | default(\"Ajouter une nouvelle entr\u00e9e\") }}",
                        "                        </a>",
                        "                    {% endif %}",
                        "                </div>",
                        "            </div>",
                        "        </div>",
                        "    </div>",
                        "{% endif %}",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/component/card/_simple.html.twig": {
                    "contents": [
                        "<div class=\"card\">",
                        "    <div class=\"card-inner\">",
                        "        <div class=\"card-head\">",
                        "            <h5 class=\"card-title\">",
                        "                {% block simple_card_title %}{% endblock %}",
                        "            </h5>",
                        "        </div>",
                        "        {% block simple_card_body %}{% endblock %}",
                        "    </div>",
                        "</div>",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/component/card/_stats.html.twig": {
                    "contents": [
                        "<div class=\"card\">",
                        "    <div class=\"nk-ecwg nk-ecwg6\">",
                        "        <div class=\"card-inner\">",
                        "            <div class=\"card-title-group\">",
                        "                <div class=\"card-title\">",
                        "                    <h6 class=\"title\">{% block stats_card_label %}{%endblock%}</h6>",
                        "                </div>",
                        "            </div>",
                        "            <div class=\"data\">",
                        "                <div class=\"data-group\">",
                        "                    <div class=\"amount\">{% block stats_card_value %}{% endblock %}</div>",
                        "                    <div class=\"nk-ecwg6-ck\">",
                        "                        {% block stats_card_frequency %}{% endblock %}",
                        "                    </div>",
                        "                </div>",
                        "                <div class=\"info\">",
                        "                    {% block stats_card_info %}{% endblock %}",
                        "                </div>",
                        "            </div>",
                        "        </div>",
                        "    </div>",
                        "</div>",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/layout/base.html.twig": {
                    "contents": [
                        "{% apply spaceless %}",
                        "    <!DOCTYPE html>",
                        "    <html lang=\"{{ app.request.locale() | default('fr') }}\">",
                        "    <head>",
                        "        <meta charset=\"utf-8\">",
                        "        <meta name=\"author\" content=\"devscast\">",
                        "        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">",
                        "        <link rel=\"shortcut icon\" href=\"{{ asset('/images/logo.png') }}\">",
                        "        <title>{% block title %}{% endblock %} | Administration | devscast.org</title>",
                        "",
                        "        {# PWA support #}",
                        "        <meta name=\"theme-color\" content=\"#05FFBA\">",
                        "        <link rel=\"manifest\" href=\"{{ asset('manifest.json') }}\">",
                        "",
                        "        {# PWA Support IOS #}",
                        "        <link rel=\"apple-touch-icon\" sizes=\"192x192\" href=\"{{ asset('images/icons/logo/maskable_icon_x192.png') }}\">",
                        "        <link rel=\"apple-touch-icon\" sizes=\"512x512\" href=\"{{ asset('images/icons/logo/maskable_icon_x512.png') }}\">",
                        "        <link rel=\"apple-touch-startup-image\" href=\"{{ asset('images/icons/logo/maskable_icon.png') }}\">",
                        "        <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">",
                        "        <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">",
                        "",
                        "        {% block meta %}{% endblock %}",
                        "        {{ encore_entry_link_tags('admin') }}",
                        "        {% block stylesheets %}{% endblock %}",
                        "",
                        "        <script defer data-turbo-track=\"reload\" src=\"{{ asset('admin/assets/bundle.js') }}\"></script>",
                        "        <script defer data-turbo-track=\"reload\" src=\"{{ asset('admin/assets/scripts.js') }}\"></script>",
                        "",
                        "        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css\">",
                        "        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/highlight.js/latest/styles/dracula.min.css\">",
                        "",
                        "        {{ encore_entry_script_tags('admin') }}",
                        "    </head>",
                        "    <body class=\"nk-body bg-theme has-sidebar ui-shady {{ app.user.isDarkTheme ? 'dark-mode' : 'light-mode' }}\" {{ stimulus_controller('modal-form') }}>",
                        "    {% include '@admin/shared/component/_flash.html.twig' %}",
                        "    <div class=\"nk-app-root\">",
                        "        <div class=\"nk-main\">",
                        "            {% block sidebar %}",
                        "                {% embed \"@admin/shared/component/_sidebar.html.twig\" %}{% endembed %}",
                        "            {% endblock %}",
                        "            <div class=\"nk-wrap\">",
                        "                {% block navbar %}",
                        "                    {% include '@admin/shared/component/_navbar.html.twig' %}",
                        "                {% endblock %}",
                        "                <div class=\"nk-content\">",
                        "                    <div class=\"container-fluid\">",
                        "                        <div class=\"nk-content-inner\">",
                        "                            {% block body %}",
                        "                                <div class=\"nk-content-body\">",
                        "                                    <div class=\"mx-auto {% block wideContentClass %}wide-lg{% endblock %}\">",
                        "                                        {% block header %}{% endblock %}",
                        "                                        <div class=\"nk-block\">",
                        "                                            {% block content %}{% endblock %}",
                        "                                        </div>",
                        "                                    </div>",
                        "                                </div>",
                        "                            {% endblock %}",
                        "                        </div>",
                        "                    </div>",
                        "                </div>",
                        "                {% block footer %}",
                        "                    {% embed \"@admin/shared/component/_footer.html.twig\" %}{% endembed %}",
                        "                {% endblock %}",
                        "            </div>",
                        "        </div>",
                        "    </div>",
                        "    {% block javascripts %}{% endblock %}",
                        "    </body>",
                        "    </html>",
                        "{% endapply %}",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/layout/error.html.twig": {
                    "contents": [
                        "{% apply spaceless %}",
                        "    <!DOCTYPE html>",
                        "    <html lang=\"{{ app.request.locale }}\" class=\"js\">",
                        "    <head>",
                        "        <meta charset=\"utf-8\">",
                        "        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">",
                        "        <link rel=\"shortcut icon\" href=\"{{ asset('images/logo.png') }}\">",
                        "        <title>{{ exception.statusCode }} {{ exception.statusText }} | devscast.org</title>",
                        "        {{ encore_entry_link_tags('app') }}",
                        "        {{ encore_entry_script_tags('app')}}",
                        "    </head>",
                        "",
                        "    <body class=\"nk-body bg-white npc-default pg-error\">",
                        "    <div class=\"nk-app-root\">",
                        "        <div class=\"nk-main \">",
                        "            <div class=\"nk-wrap nk-wrap-nosidebar\">",
                        "                <div class=\"nk-content \">",
                        "                    <div class=\"nk-block nk-block-middle wide-xs mx-auto\">",
                        "                        <div class=\"nk-block-content nk-error-ld text-center\">",
                        "                            <h1 class=\"nk-error-head\">{{ exception.statusCode }}</h1>",
                        "                            <h3 class=\"nk-error-title\">{{ exception.statusText }}</h3>",
                        "                            <p class=\"nk-error-text\">D\u00e9sol\u00e9 nous n'arrivons pas \u00e0 charger cette page...</p>",
                        "                            <a href=\"{{ path('app_index') }}\" class=\"btn btn-lg btn-primary mt-2\">Rentrer sur terre</a>",
                        "                        </div>",
                        "                    </div>",
                        "                </div>",
                        "            </div>",
                        "        </div>",
                        "    </div>",
                        "    </body>",
                        "    </html>",
                        "{% endapply %}",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/layout/form.html.twig": {
                    "contents": [
                        "{% extends '@admin/shared/layout/base.html.twig' %}",
                        "{% set _title = (data is defined and data) ? \"\u00c9dition #{ _entity | trans([], _domain) }\" : \"Cr\u00e9ation #{_entity | trans([], _domain)}\" %}",
                        "{% block title _title %}",
                        "",
                        "{% block header %}",
                        "    {% embed \"@admin/shared/component/_header.html.twig\" %}",
                        "        {% block header_title _title %}",
                        "        {% block header_action_list %}",
                        "            <li class=\"btn-group\">",
                        "                <a href=\"{{ _index_url }}\" class=\"btn btn-white btn-dim btn-outline-light\" aria-label=\"{{ 'global.back' | trans }}\" title=\"{{ 'global.back' | trans }}\">",
                        "                    {{ 'arrow-long-left' | icon }}",
                        "                    <span>Toutes les entr\u00e9es</span>",
                        "                </a>",
                        "                {% if _show_url %}",
                        "                    <a href=\"{{ _show_url }}\" class=\"btn btn-white btn-dim btn-outline-light\" aria-label=\"{{ 'global.show' | trans }}\" title=\"{{ 'global.show' | trans }}\">",
                        "                        {{ 'eye' | icon }}",
                        "                        <span>revenir aux d\u00e9tails</span>",
                        "                    </a>",
                        "                {% endif %}",
                        "            </li>",
                        "        {% endblock %}",
                        "    {% endembed %}",
                        "{% endblock %}",
                        "",
                        "{% block content %}",
                        "    {% embed \"@admin/shared/component/card/_simple.html.twig\" %}",
                        "        {% block simple_card_body %}",
                        "            {% include '@admin/shared/component/_form.html.twig' %}",
                        "        {% endblock %}",
                        "    {% endembed %}",
                        "{% endblock %}",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/layout/form_theme.html.twig": {
                    "contents": [
                        "{% use \"bootstrap_base_layout.html.twig\" %}",
                        "",
                        "{# Widgets #}",
                        "",
                        "{% block money_widget -%}",
                        "    {%- set prepend = not (money_pattern starts with '{{') -%}",
                        "    {%- set append = not (money_pattern ends with '}}') -%}",
                        "    {%- if prepend or append -%}",
                        "        <div class=\"input-group{{ group_class|default('') }}\">",
                        "            {%- if prepend -%}",
                        "                <div class=\"input-group-prepend\">",
                        "                    <span class=\"input-group-text\">{{ money_pattern|form_encode_currency }}</span>",
                        "                </div>",
                        "            {%- endif -%}",
                        "            {{- block('form_widget_simple') -}}",
                        "            {%- if append -%}",
                        "                <div class=\"input-group-append\">",
                        "                    <span class=\"input-group-text\">{{ money_pattern|form_encode_currency }}</span>",
                        "                </div>",
                        "            {%- endif -%}",
                        "        </div>",
                        "    {%- else -%}",
                        "        {{- block('form_widget_simple') -}}",
                        "    {%- endif -%}",
                        "{%- endblock money_widget %}",
                        "",
                        "{% block datetime_widget -%}",
                        "    {%- if widget != 'single_text' and not valid -%}",
                        "        {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control is-invalid')|trim}) -%}",
                        "        {% set valid = true %}",
                        "    {%- endif -%}",
                        "    {{- parent() -}}",
                        "{%- endblock datetime_widget %}",
                        "",
                        "{% block date_widget -%}",
                        "    {%- if widget != 'single_text' and not valid -%}",
                        "        {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control form-control-lg is-invalid')|trim}) -%}",
                        "        {% set valid = true %}",
                        "    {%- endif -%}",
                        "    {{- parent() -}}",
                        "{%- endblock date_widget %}",
                        "",
                        "{% block time_widget -%}",
                        "    {%- if widget != 'single_text' and not valid -%}",
                        "        {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control l form-control-lg is-invalid')|trim}) -%}",
                        "        {% set valid = true %}",
                        "    {%- endif -%}",
                        "    {{- parent() -}}",
                        "{%- endblock time_widget %}",
                        "",
                        "{% block dateinterval_widget -%}",
                        "    {%- if widget != 'single_text' and not valid -%}",
                        "        {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control l form-control-lg is-invalid')|trim}) -%}",
                        "        {% set valid = true %}",
                        "    {%- endif -%}",
                        "    {%- if widget == 'single_text' -%}",
                        "        {{- block('form_widget_simple') -}}",
                        "    {%- else -%}",
                        "        {%- set attr = attr|merge({class: (attr.class|default('') ~ ' form-inline')|trim}) -%}",
                        "        <div {{ block('widget_container_attributes') }}>",
                        "            {%- if with_years -%}",
                        "                <div class=\"col-auto\">",
                        "                    {{ form_label(form.years) }}",
                        "                    {{ form_widget(form.years) }}",
                        "                </div>",
                        "            {%- endif -%}",
                        "            {%- if with_months -%}",
                        "                <div class=\"col-auto\">",
                        "                    {{ form_label(form.months) }}",
                        "                    {{ form_widget(form.months) }}",
                        "                </div>",
                        "            {%- endif -%}",
                        "            {%- if with_weeks -%}",
                        "                <div class=\"col-auto\">",
                        "                    {{ form_label(form.weeks) }}",
                        "                    {{ form_widget(form.weeks) }}",
                        "                </div>",
                        "            {%- endif -%}",
                        "            {%- if with_days -%}",
                        "                <div class=\"col-auto\">",
                        "                    {{ form_label(form.days) }}",
                        "                    {{ form_widget(form.days) }}",
                        "                </div>",
                        "            {%- endif -%}",
                        "            {%- if with_hours -%}",
                        "                <div class=\"col-auto\">",
                        "                    {{ form_label(form.hours) }}",
                        "                    {{ form_widget(form.hours) }}",
                        "                </div>",
                        "            {%- endif -%}",
                        "            {%- if with_minutes -%}",
                        "                <div class=\"col-auto\">",
                        "                    {{ form_label(form.minutes) }}",
                        "                    {{ form_widget(form.minutes) }}",
                        "                </div>",
                        "            {%- endif -%}",
                        "            {%- if with_seconds -%}",
                        "                <div class=\"col-auto\">",
                        "                    {{ form_label(form.seconds) }}",
                        "                    {{ form_widget(form.seconds) }}",
                        "                </div>",
                        "            {%- endif -%}",
                        "            {%- if with_invert %}{{ form_widget(form.invert) }}{% endif -%}",
                        "        </div>",
                        "    {%- endif -%}",
                        "{%- endblock dateinterval_widget %}",
                        "",
                        "{% block percent_widget -%}",
                        "    {%- if symbol -%}",
                        "        <div class=\"input-group\">",
                        "            {{- block('form_widget_simple') -}}",
                        "            <div class=\"input-group-append\">",
                        "                <span class=\"input-group-text\">{{ symbol|default('%') }}</span>",
                        "            </div>",
                        "        </div>",
                        "    {%- else -%}",
                        "        {{- block('form_widget_simple') -}}",
                        "    {%- endif -%}",
                        "{%- endblock percent_widget %}",
                        "",
                        "{% block file_widget -%}",
                        "    <{{ element|default('div') }} class=\"custom-file\">",
                        "    {%- set type = type|default('file') -%}",
                        "    {{- block('form_widget_simple') -}}",
                        "    {%- set label_attr = label_attr|merge({ class: (label_attr.class|default('') ~ ' custom-file-label')|trim }) -%}",
                        "    {%- set input_lang = 'en' -%}",
                        "    {% if app is defined and app.request is defined %}{%- set input_lang = app.request.locale -%}{%- endif -%}",
                        "    <label for=\"{{ form.vars.id }}\" lang=\"{{ input_lang }}\" {% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}>",
                        "        {%- if attr.placeholder is defined and attr.placeholder is not none -%}",
                        "            {{- translation_domain is same as(false) ? attr.placeholder : attr.placeholder|trans({}, translation_domain) -}}",
                        "        {%- endif -%}",
                        "    </label>",
                        "    </{{ element|default('div') }}>",
                        "{% endblock %}",
                        "",
                        "{% block form_widget_simple -%}",
                        "    {% if type is not defined or type != 'hidden' %}",
                        "        {%- set attr = attr|merge({class: (attr.class|default('') ~ (type|default('') == 'file' ? ' custom-file-input' : ' form-control l form-control-lg'))|trim}) -%}",
                        "    {% endif %}",
                        "    {%- if type is defined and (type == 'range' or type == 'color') %}",
                        "        {# Attribute \"required\" is not supported #}",
                        "        {%- set required = false -%}",
                        "    {% endif %}",
                        "    {{- parent() -}}",
                        "{%- endblock form_widget_simple %}",
                        "",
                        "{%- block widget_attributes -%}",
                        "    {%- if not valid %}",
                        "        {% set attr = attr|merge({class: (attr.class|default('') ~ ' is-invalid')|trim}) %}",
                        "    {% endif -%}",
                        "    {{ parent() }}",
                        "{%- endblock widget_attributes -%}",
                        "",
                        "{% block button_widget -%}",
                        "    {%- set attr = attr|merge({class: (attr.class|default('btn-secondary') ~ ' btn')|trim}) -%}",
                        "    {{- parent() -}}",
                        "{%- endblock button_widget %}",
                        "",
                        "{% block submit_widget -%}",
                        "    {%- set attr = attr|merge({class: (attr.class|default('btn-primary'))|trim}) -%}",
                        "    {{- parent() -}}",
                        "{%- endblock submit_widget %}",
                        "",
                        "{% block checkbox_widget -%}",
                        "    {%- set parent_label_class = parent_label_class|default(label_attr.class|default('custom-switch custom-switch-lg')) -%}",
                        "    {%- if 'custom-checkbox' in parent_label_class -%}",
                        "        {%- set attr = attr|merge({class: (attr.class|default('') ~ ' custom-control-input')|trim}) -%}",
                        "        <div class=\"mb-3 custom-checkbox{{ 'checkbox-inline' in parent_label_class ? ' custom-control-inline' }}\">",
                        "            {{- form_label(form, null, { widget: parent() }) -}}",
                        "        </div>",
                        "    {%- elseif 'custom-switch' in parent_label_class -%}",
                        "        {%- set attr = attr|merge({class: (attr.class|default('') ~ ' custom-control-input')|trim}) -%}",
                        "        <div class=\"mb-3 custom-switch{{ 'switch-inline' in parent_label_class ? ' custom-control-inline' }}\">",
                        "            {{- form_label(form, null, { widget: parent() }) -}}",
                        "        </div>",
                        "    {%- else -%}",
                        "        {%- set attr = attr|merge({class: (attr.class|default('') ~ ' form-check-input')|trim}) -%}",
                        "        <div class=\"form-check{{ 'checkbox-inline' in parent_label_class ? ' form-check-inline' }}\">",
                        "            {{- form_label(form, null, { widget: parent() }) -}}",
                        "        </div>",
                        "    {%- endif -%}",
                        "{%- endblock checkbox_widget %}",
                        "",
                        "{% block radio_widget -%}",
                        "    {%- set parent_label_class = parent_label_class|default(label_attr.class|default('')) -%}",
                        "    {%- if 'custom-radio' in parent_label_class -%}",
                        "        {%- set attr = attr|merge({class: (attr.class|default('') ~ ' custom-control-input')|trim}) -%}",
                        "        <div class=\"custom-radio{{ 'radio-inline' in parent_label_class ? ' custom-control-inline' }}\">",
                        "            {{- form_label(form, null, { widget: parent() }) -}}",
                        "        </div>",
                        "    {%- else -%}",
                        "        {%- set attr = attr|merge({class: (attr.class|default('') ~ ' form-check-input')|trim}) -%}",
                        "        <div class=\"form-check{{ 'radio-inline' in parent_label_class ? ' form-check-inline' }}\">",
                        "            {{- form_label(form, null, { widget: parent() }) -}}",
                        "        </div>",
                        "    {%- endif -%}",
                        "{%- endblock radio_widget %}",
                        "",
                        "{% block choice_widget_expanded -%}",
                        "    <div {{ block('widget_container_attributes') }}>",
                        "        {%- for child in form %}",
                        "            {{- form_widget(child, {",
                        "                parent_label_class: label_attr.class|default(''),",
                        "                translation_domain: choice_translation_domain,",
                        "                valid: valid,",
                        "            }) -}}",
                        "        {% endfor -%}",
                        "    </div>",
                        "{%- endblock choice_widget_expanded %}",
                        "",
                        "{# Labels #}",
                        "",
                        "{% block form_label -%}",
                        "    {% if label is not same as(false) -%}",
                        "        {%- if compound is defined and compound -%}",
                        "            {%- set element = 'legend' -%}",
                        "            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' form-label')|trim}) -%}",
                        "        {%- else -%}",
                        "            {%- set label_attr = label_attr|merge({for: id, class: (label_attr.class|default('') ~ ' form-label')|trim}) -%}",
                        "        {%- endif -%}",
                        "        {% if required -%}",
                        "            {% set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' required')|trim}) %}",
                        "        {%- endif -%}",
                        "        {% if label is empty -%}",
                        "            {%- if label_format is not empty -%}",
                        "                {% set label = label_format|replace({",
                        "                    '%name%': name,",
                        "                    '%id%': id,",
                        "                }) %}",
                        "            {%- else -%}",
                        "                {% set label = name|humanize %}",
                        "            {%- endif -%}",
                        "        {%- endif -%}",
                        "        <{{ element|default('label') }}{% if label_attr %}{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}>",
                        "        {%- if translation_domain is same as(false) -%}",
                        "            {%- if label_html is same as(false) -%}",
                        "                {{- label -}}",
                        "            {%- else -%}",
                        "                {{- label|raw -}}",
                        "            {%- endif -%}",
                        "        {%- else -%}",
                        "            {%- if label_html is same as(false) -%}",
                        "                {{- label|trans(label_translation_parameters, translation_domain) -}}",
                        "            {%- else -%}",
                        "                {{- label|trans(label_translation_parameters, translation_domain)|raw -}}",
                        "            {%- endif -%}",
                        "        {%- endif -%}",
                        "        {% block form_label_errors %}{{- form_errors(form) -}}{% endblock form_label_errors %}</{{ element|default('label') }}>",
                        "    {%- else -%}",
                        "        {%- if errors|length > 0 -%}",
                        "            <div id=\"{{ id }}_errors\" class=\"mb-2\">",
                        "                {{- form_errors(form) -}}",
                        "            </div>",
                        "        {%- endif -%}",
                        "    {%- endif -%}",
                        "{%- endblock form_label %}",
                        "",
                        "{% block checkbox_radio_label -%}",
                        "    {#- Do not display the label if widget is not defined in order to prevent double label rendering -#}",
                        "    {%- if widget is defined -%}",
                        "        {% set is_parent_custom = parent_label_class is defined and ('custom-checkbox' in parent_label_class or 'custom-radio' in parent_label_class or 'custom-switch' in parent_label_class) %}",
                        "        {% set is_custom = label_attr.class is defined and ('custom-checkbox' in label_attr.class or 'custom-radio' in label_attr.class or 'custom-switch' in label_attr.class) %}",
                        "        {%- if is_parent_custom or is_custom -%}",
                        "            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' custom-control-label')|trim}) -%}",
                        "        {%- else %}",
                        "            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' custom-control-label')|trim}) -%}",
                        "        {%- endif %}",
                        "        {%- if not compound -%}",
                        "            {% set label_attr = label_attr|merge({'for': id}) %}",
                        "        {%- endif -%}",
                        "        {%- if required -%}",
                        "            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' required')|trim}) -%}",
                        "        {%- endif -%}",
                        "        {%- if parent_label_class is defined -%}",
                        "            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' ' ~ parent_label_class)|replace({'checkbox-inline': '', 'radio-inline': '', 'custom-checkbox': '', 'custom-radio': ''})|trim}) -%}",
                        "        {%- endif -%}",
                        "        {%- if label is not same as(false) and label is empty -%}",
                        "            {%- if label_format is not empty -%}",
                        "                {%- set label = label_format|replace({",
                        "                    '%name%': name,",
                        "                    '%id%': id,",
                        "                }) -%}",
                        "            {%- else -%}",
                        "                {%- set label = name|humanize -%}",
                        "            {%- endif -%}",
                        "        {%- endif -%}",
                        "",
                        "        {{ widget|raw }}",
                        "        <label{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}>",
                        "            {%- if label is not same as(false) -%}",
                        "                {%- if translation_domain is same as(false) -%}",
                        "                    {%- if label_html is same as(false) -%}",
                        "                        {{- label -}}",
                        "                    {%- else -%}",
                        "                        {{- label|raw -}}",
                        "                    {%- endif -%}",
                        "                {%- else -%}",
                        "                    {%- if label_html is same as(false) -%}",
                        "                        {{- label|trans(label_translation_parameters, translation_domain) -}}",
                        "                    {%- else -%}",
                        "                        {{- label|trans(label_translation_parameters, translation_domain)|raw -}}",
                        "                    {%- endif -%}",
                        "                {%- endif -%}",
                        "            {%- endif -%}",
                        "            {{- form_errors(form) -}}",
                        "        </label>",
                        "    {%- endif -%}",
                        "{%- endblock checkbox_radio_label %}",
                        "",
                        "{# Rows #}",
                        "",
                        "{% block form_row -%}",
                        "    {%- if compound is defined and compound -%}",
                        "        {%- set element = 'fieldset' -%}",
                        "    {%- endif -%}",
                        "    {%- set widget_attr = {} -%}",
                        "    {%- if help is not empty -%}",
                        "        {%- set widget_attr = {attr: {'aria-describedby': id ~\"_help\"}} -%}",
                        "    {%- endif -%}",
                        "    <{{ element|default('div') }}{% with {attr: row_attr|merge({class: (row_attr.class|default('') ~ ' form-group')|trim})} %}{{ block('attributes') }}{% endwith %}>",
                        "    {{- form_label(form) -}}",
                        "    <div class=\"form-control-wrap\">",
                        "        {%- if hint_icon is defined and hint_icon is not null -%}",
                        "            <div class=\"form-icon form-icon-{{ hint_icon_alignment }}\">",
                        "                <em class=\"icon ni ni-{{ hint_icon }}\"></em>",
                        "            </div>",
                        "        {%- endif -%}",
                        "        {%- if hint_text is defined and hint_text is not empty  -%}",
                        "            <div class=\"form-text-hint\">",
                        "                <span class=\"overline-title\">{{ hint_text }}</span>",
                        "            </div>",
                        "        {%- endif -%}",
                        "        {{- form_widget(form, widget_attr) -}}",
                        "    </div>",
                        "    {{- form_help(form) -}}",
                        "    </{{ element|default('div') }}>",
                        "{%- endblock form_row %}",
                        "",
                        "{# Errors #}",
                        "",
                        "{% block form_errors -%}",
                        "    {%- if errors|length > 0 -%}",
                        "",
                        "        {% if form is not rootform %}",
                        "            <span class=\"alert alert-danger d-block\">",
                        "                {%- for error in errors -%}",
                        "                    <span class=\"d-block\">",
                        "                        {% if form is not rootform %}",
                        "                            <span class=\"form-error-message\">{{ error.message }}</span>",
                        "                        {% endif %}",
                        "                    </span>",
                        "                {%- endfor -%}",
                        "            </span>",
                        "        {% else %}",
                        "            {%- for error in errors -%}",
                        "                <app-toast type=\"error\" message=\"{{ error.message }}\"></app-toast>",
                        "            {%- endfor -%}",
                        "        {% endif %}",
                        "    {%- endif %}",
                        "{%- endblock form_errors %}",
                        "",
                        "{# Help #}",
                        "",
                        "{% block form_help -%}",
                        "    {%- if help is not empty -%}",
                        "        {%- set help_attr = help_attr|merge({class: (help_attr.class|default('') ~ ' form-note')|trim}) -%}",
                        "        <small id=\"{{ id }}_help\"{% with { attr: help_attr } %}{{ block('attributes') }}{% endwith %}>",
                        "            {%- if translation_domain is same as(false) -%}",
                        "                {%- if help_html is same as(false) -%}",
                        "                    {{- help -}}",
                        "                {%- else -%}",
                        "                    {{- help|raw -}}",
                        "                {%- endif -%}",
                        "            {%- else -%}",
                        "                {%- if help_html is same as(false) -%}",
                        "                    {{- help|trans(help_translation_parameters, translation_domain) -}}",
                        "                {%- else -%}",
                        "                    {{- help|trans(help_translation_parameters, translation_domain)|raw -}}",
                        "                {%- endif -%}",
                        "            {%- endif -%}",
                        "        </small>",
                        "    {%- endif -%}",
                        "{%- endblock form_help %}",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/layout/pagination/filter.html.twig": {
                    "contents": [
                        "<form method=\"get\" action=\"{{ action }}\" enctype=\"application/x-www-form-urlencoded\">",
                        "    <div class=\"form-row content-search\">",
                        "        {% if fields|length > 1 %}",
                        "            <div class=\"form-group mb-0 mt-0 col-4\">",
                        "                <select class=\"form-control\" name=\"{{ filterFieldName }}\" aria-label=\"{{ 'filter' | trans }}\">",
                        "                    {% for field, label in fields %}",
                        "                        <option value=\"{{ field }}\"{% if selectedField == field %} selected=\"selected\"{% endif %}>{{ label }}</option>",
                        "                    {% endfor %}",
                        "                </select>",
                        "            </div>",
                        "        {% else %}",
                        "            <input type=\"hidden\" name=\"filter_name\" value=\"{{ fields|keys|first }}\"/>",
                        "        {% endif %}",
                        "",
                        "        <div class=\"search-form mb-0 mt-0 col-7\">",
                        "            <input placeholder=\"{{ 'search' | trans }}...\"",
                        "                   class=\"form-control\"",
                        "                   aria-label=\"{{ 'search' | trans }}\"",
                        "                   autocomplete=\"false\"",
                        "                   type=\"search\"",
                        "                   value=\"{{ selectedValue }}\"",
                        "                   name=\"filter_value\"",
                        "            />",
                        "            <button class=\"btn\" type=\"button\">",
                        "                {{ 'search' | icon }}",
                        "            </button>",
                        "        </div>",
                        "    </div>",
                        "</form>",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/layout/pagination/pagination.html.twig": {
                    "contents": [
                        "{% if pageCount > 1 %}",
                        "    <nav>",
                        "        <ul class=\"pagination pagination-space justify-content-center\">",
                        "            {% if previous is defined %}",
                        "                <li class=\"page-item\">",
                        "                    <a class=\"page-link\" rel=\"prev\" href=\"{{ path(route, query|merge({(pageParameterName): previous})) }}\">",
                        "                        {{ 'arrow-left' | icon }}",
                        "                    </a>",
                        "                </li>",
                        "            {% else %}",
                        "                <li class=\"page-item disabled\">",
                        "                    <span class=\"page-link\">{{ 'arrow-left' | icon }}</span>",
                        "                </li>",
                        "            {% endif %}",
                        "",
                        "            {% if startPage > 1 %}",
                        "                <li class=\"page-item\">",
                        "                    <a class=\"page-link\" href=\"{{ path(route, query|merge({(pageParameterName): 1})) }}\">1</a>",
                        "                </li>",
                        "                {% if startPage == 3 %}",
                        "                    <li class=\"page-item\">",
                        "                        <a class=\"page-link\" href=\"{{ path(route, query|merge({(pageParameterName): 2})) }}\">2</a>",
                        "                    </li>",
                        "                {% elseif startPage != 2 %}",
                        "                    <li class=\"page-item disabled\">",
                        "                        <span class=\"page-link\">{{ 'more-h' | icon }}</span>",
                        "                    </li>",
                        "                {% endif %}",
                        "            {% endif %}",
                        "",
                        "            {% for page in pagesInRange %}",
                        "                {% if page != current %}",
                        "                    <li class=\"page-item\">",
                        "                        <a class=\"page-link\" href=\"{{ path(route, query|merge({(pageParameterName): page})) }}\">{{ page }}</a>",
                        "                    </li>",
                        "                {% else %}",
                        "                    <li class=\"page-item active\">",
                        "                        <span class=\"page-link\">{{ page }}</span>",
                        "                    </li>",
                        "                {% endif %}",
                        "            {% endfor %}",
                        "",
                        "            {% if pageCount > endPage %}",
                        "                {% if pageCount > (endPage + 1) %}",
                        "                    {% if pageCount > (endPage + 2) %}",
                        "                        <li class=\"page-item disabled\">",
                        "                            <span class=\"page-link\">{{ 'more-h' | icon }}</span>",
                        "                        </li>",
                        "                    {% else %}",
                        "                        <li class=\"page-item\">",
                        "                            <a class=\"page-link\" href=\"{{ path(route, query|merge({(pageParameterName): (pageCount - 1)})) }}\">",
                        "                                {{ pageCount -1 }}",
                        "                            </a>",
                        "                        </li>",
                        "                    {% endif %}",
                        "                {% endif %}",
                        "                <li class=\"page-item\">",
                        "                    <a class=\"page-link\" href=\"{{ path(route, query|merge({(pageParameterName): pageCount})) }}\">",
                        "                        {{ pageCount }}",
                        "                    </a>",
                        "                </li>",
                        "            {% endif %}",
                        "",
                        "            {% if next is defined %}",
                        "                <li class=\"page-item\">",
                        "                    <a class=\"page-link\" rel=\"next\" href=\"{{ path(route, query|merge({(pageParameterName): next})) }}\">",
                        "                        {{ 'arrow-right' | icon }}",
                        "                    </a>",
                        "                </li>",
                        "            {% else %}",
                        "                <li class=\"page-item disabled\">",
                        "                    <span class=\"page-link\">",
                        "                         {{ 'arrow-right' | icon }}",
                        "                    </span>",
                        "                </li>",
                        "            {% endif %}",
                        "        </ul>",
                        "    </nav>",
                        "{% endif %}",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/layout/pagination/sorting.html.twig": {
                    "contents": [
                        "<a{% for attr, value  in options %} {{ attr }}=\"{{ value }}\"{% endfor %}>",
                        "<span class=\"float-right\">",
                        "    {% if sorted %}",
                        "        {% if direction == 'desc' %}",
                        "            {{ 'arrow-up' | icon }}",
                        "        {% else %}",
                        "            {{ 'arrow-down' | icon }}",
                        "        {% endif %}",
                        "    {% else %}",
                        "        {{ 'opt-alt' | icon }}",
                        "    {% endif %}",
                        "</span>",
                        "{{ title }}",
                        "</a>",
                        ""
                    ],
                    "executable": false
                },
                "templates/admin/shared/offline.html.twig": {
                    "contents": [
                        "",
                        "<!DOCTYPE html>",
                        "<html lang=\"{{ app.request.locale }}\" class=\"js\">",
                        "<head>",
                        "    <meta charset=\"utf-8\">",
                        "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">",
                        "    <link rel=\"shortcut icon\" href=\"{{ asset('images/logo_icon.png') }}\">",
                        "    <title>Hors Ligne | UNH Rapports</title>",
                        "    {{ encore_entry_link_tags('app') }}",
                        "    {{ encore_entry_script_tags('app')}}",
                        "</head>",
                        "",
                        "<body class=\"nk-body bg-white npc-default pg-error\">",
                        "<div class=\"nk-app-root\">",
                        "    <div class=\"nk-main \">",
                        "        <div class=\"nk-wrap nk-wrap-nosidebar\">",
                        "            <div class=\"nk-content \">",
                        "                <div class=\"nk-block nk-block-middle wide-xs mx-auto\">",
                        "                    <div class=\"nk-block-content nk-error-ld text-center\">",
                        "                        <h1 class=\"nk-error-head\">Oups</h1>",
                        "                        <h3 class=\"nk-error-title\">Vous \u00eates hors ligne</h3>",
                        "                        <p class=\"nk-error-text\">D\u00e9sol\u00e9 nous n'arrivons pas \u00e0 charger cette page...</p>",
                        "                        <a href=\"{{ path('app_index') }}\" class=\"btn btn-lg btn-primary mt-2\">Rentrer sur terre</a>",
                        "                    </div>",
                        "                </div>",
                        "            </div>",
                        "        </div>",
                        "    </div>",
                        "</div>",
                        "</body>",
                        "</html>",
                        ""
                    ],
                    "executable": false
                },
                "templates/app/domain/.gitignore": {
                    "contents": [
                        ""
                    ],
                    "executable": false
                },
                "templates/app/shared/.gitignore": {
                    "contents": [
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "3ac30355008a2256b1e1330b97eba24fc09f3f4a"
        }
    }
}
